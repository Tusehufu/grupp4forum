{"version":3,"file":"js/app.a1571963.js","mappings":"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","sources":["webpack://grupp4forum/./src/App.vue?2a5e","webpack://grupp4forum/./src/App.vue","webpack://grupp4forum/./src/App.vue?7ccd","webpack://grupp4forum/./src/views/HomeView.vue","webpack://grupp4forum/./src/views/HomeView.vue?1da1","webpack://grupp4forum/./src/components/ConfirmDeletePostModal.vue?f148","webpack://grupp4forum/./src/components/ConfirmDeletePostModal.vue","webpack://grupp4forum/./src/components/ConfirmDeletePostModal.vue?a10f","webpack://grupp4forum/./src/components/CreateReplyModal.vue?7571","webpack://grupp4forum/./src/components/CreateReplyModal.vue","webpack://grupp4forum/./src/components/CreateReplyModal.vue?4121","webpack://grupp4forum/./src/components/EditPostModal.vue?7adc","webpack://grupp4forum/./src/components/EditPostModal.vue","webpack://grupp4forum/./src/components/EditPostModal.vue?8850","webpack://grupp4forum/./src/components/EditReplyModal.vue?c51b","webpack://grupp4forum/./src/components/EditReplyModal.vue","webpack://grupp4forum/./src/components/EditReplyModal.vue?cb25","webpack://grupp4forum/./src/components/PostList.vue?2605","webpack://grupp4forum/./src/components/PostList.vue","webpack://grupp4forum/./src/components/PostList.vue?04fa","webpack://grupp4forum/./src/components/CreatePostModal.vue?d249","webpack://grupp4forum/./src/components/CreatePostModal.vue","webpack://grupp4forum/./src/components/CreatePostModal.vue?ef9b","webpack://grupp4forum/./src/views/ForumView.vue?7fd7","webpack://grupp4forum/./src/views/ForumView.vue","webpack://grupp4forum/./src/views/ForumView.vue?d1cb","webpack://grupp4forum/./src/components/Login.vue?bec8","webpack://grupp4forum/./src/components/Login.vue","webpack://grupp4forum/./src/components/Login.vue?38a9","webpack://grupp4forum/./src/components/Register.vue?f9bc","webpack://grupp4forum/./src/components/Register.vue","webpack://grupp4forum/./src/components/Register.vue?0e3f","webpack://grupp4forum/./src/components/DeleteUser.vue?63d8","webpack://grupp4forum/./src/components/DeleteUser.vue","webpack://grupp4forum/./src/components/DeleteUser.vue?1eb2","webpack://grupp4forum/./src/views/ProfileView.vue?f405","webpack://grupp4forum/./src/views/ProfileView.vue","webpack://grupp4forum/./src/views/ProfileView.vue?3e49","webpack://grupp4forum/./src/router/index.ts","webpack://grupp4forum/./src/main.ts","webpack://grupp4forum/webpack/bootstrap","webpack://grupp4forum/webpack/runtime/chunk loaded","webpack://grupp4forum/webpack/runtime/compat get default export","webpack://grupp4forum/webpack/runtime/define property getters","webpack://grupp4forum/webpack/runtime/global","webpack://grupp4forum/webpack/runtime/hasOwnProperty shorthand","webpack://grupp4forum/webpack/runtime/make namespace object","webpack://grupp4forum/webpack/runtime/publicPath","webpack://grupp4forum/webpack/runtime/jsonp chunk loading","webpack://grupp4forum/webpack/startup"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\nimport _imports_0 from '@/assets/flowertopleft.png'\nimport _imports_1 from '@/assets/flowertopright.png'\nimport _imports_2 from '@/assets/bottomright.png'\nimport _imports_3 from '@/assets/bottomleft.png'\n\n\nconst _hoisted_1 = { id: \"app\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Left Image\",\n  class: \"corner-image left-image\"\n}, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  alt: \"Right Image\",\n  class: \"corner-image right-image\"\n}, null, -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2,\n  alt: \"right img leaves\",\n  class: \"bottomcorner-image bottomright-image\"\n}, null, -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_3,\n  alt: \"left img leaves\",\n  class: \"bottomcorner-image bottomleft-image\"\n}, null, -1)\n\nimport { ref, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Reaktiva variabler för att hantera inloggnings- och adminstatus\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\r\n    const isAdminOrModerator = ref(false);\r\n    const isLoggedIn = ref(false); \r\n\r\n    // Kontrollera om användaren är inloggad genom att kontrollera om JWT-token finns i localStorage\r\n    const checkLoginStatus = () => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        isLoggedIn.value = !!token; // Sätt true om token finns, annars false\r\n    };\r\n\r\n    onMounted(async () => {\r\n        // Kontrollera inloggningsstatus\r\n        checkLoginStatus();\r\n\r\n        // Om användaren inte är inloggad behöver vi inte kolla adminstatus\r\n        if (!isLoggedIn.value) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.error('Ingen JWT-token hittades i localStorage.');\r\n                return;\r\n            }\r\n\r\n            // Kolla om användaren är admin eller moderator\r\n            const response = await axios.get('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Users/is-admin-or-moderator', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            // Uppdatera admin/moderatorstatus om API-svaret visar det\r\n            if (response.data.isAdminOrModerator) {\r\n                isAdminOrModerator.value = true;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching admin/moderator status:', error);\r\n        }\r\n    });\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    _createElementVNode(\"nav\", null, [\n      _createVNode(_component_router_link, {\n        to: \"/\",\n        class: \"btn custom-primary\"\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Hem\")\n        ]),\n        _: 1\n      }),\n      (!isLoggedIn.value)\n        ? (_openBlock(), _createBlock(_component_router_link, {\n            key: 0,\n            to: \"/register\",\n            class: \"btn custom-primary\"\n          }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"Registrera dig\")\n            ]),\n            _: 1\n          }))\n        : _createCommentVNode(\"\", true),\n      _createVNode(_component_router_link, {\n        to: \"/login\",\n        class: \"btn custom-primary\"\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Logga in\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/forum\",\n        class: \"btn custom-primary\"\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Forum\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_router_link, {\n        to: \"/profile\",\n        class: \"btn custom-primary\"\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Mina sidor\")\n        ]),\n        _: 1\n      }),\n      (isAdminOrModerator.value)\n        ? (_openBlock(), _createBlock(_component_router_link, {\n            key: 1,\n            to: \"/Admin\",\n            class: \"btn custom-primary\"\n          }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"Användarhantering\")\n            ]),\n            _: 1\n          }))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createVNode(_component_router_view)\n  ]))\n}\n}\n\n})","<template>\r\n    <div id=\"app\">\r\n        <img src=\"@/assets/flowertopleft.png\" alt=\"Left Image\" class=\"corner-image left-image\" />\r\n        <img src=\"@/assets/flowertopright.png\" alt=\"Right Image\" class=\"corner-image right-image\" />\r\n        <img src=\"@/assets/bottomright.png\" alt=\"right img leaves\" class=\"bottomcorner-image bottomright-image\" />\r\n        <img src=\"@/assets/bottomleft.png\" alt=\"left img leaves\" class=\"bottomcorner-image bottomleft-image\" />\r\n        <nav>\r\n            <router-link to=\"/\" class=\"btn custom-primary\">Hem</router-link>\r\n            <router-link v-if=\"!isLoggedIn\" to=\"/register\" class=\"btn custom-primary\">Registrera dig</router-link>\r\n            <router-link to=\"/login\" class=\"btn custom-primary\">Logga in</router-link>\r\n            <router-link to=\"/forum\" class=\"btn custom-primary\">Forum</router-link>\r\n            <router-link to=\"/profile\" class=\"btn custom-primary\">Mina sidor</router-link>\r\n\r\n            <!-- Visa endast länken om användaren är admin eller moderator -->\r\n            <router-link v-if=\"isAdminOrModerator\" to=\"/Admin\" class=\"btn custom-primary\">Användarhantering</router-link>\r\n        </nav>\r\n        <router-view />\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { ref, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Reaktiva variabler för att hantera inloggnings- och adminstatus\r\n    const isAdminOrModerator = ref(false);\r\n    const isLoggedIn = ref(false); \r\n\r\n    // Kontrollera om användaren är inloggad genom att kontrollera om JWT-token finns i localStorage\r\n    const checkLoginStatus = () => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        isLoggedIn.value = !!token; // Sätt true om token finns, annars false\r\n    };\r\n\r\n    onMounted(async () => {\r\n        // Kontrollera inloggningsstatus\r\n        checkLoginStatus();\r\n\r\n        // Om användaren inte är inloggad behöver vi inte kolla adminstatus\r\n        if (!isLoggedIn.value) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.error('Ingen JWT-token hittades i localStorage.');\r\n                return;\r\n            }\r\n\r\n            // Kolla om användaren är admin eller moderator\r\n            const response = await axios.get('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Users/is-admin-or-moderator', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            // Uppdatera admin/moderatorstatus om API-svaret visar det\r\n            if (response.data.isAdminOrModerator) {\r\n                isAdminOrModerator.value = true;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching admin/moderator status:', error);\r\n        }\r\n    });\r\n</script>\r\n\r\n\r\n<style>\r\n    #app {\r\n        font-family: Avenir, Helvetica, Arial, sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        text-align: center;\r\n        color: #2c3e50;\r\n    }\r\n\r\n    nav {\r\n        background-color: #F0F9E7;\r\n        padding: 30px;\r\n    }\r\n\r\n\r\n\r\n\r\n    /* Custom button styles */\r\n    .btn.custom-primary {\r\n        background-color: #6ECB63;\r\n        color: black;\r\n        padding: 10px;\r\n        border-radius: 5px;\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        margin: 10px;\r\n        border-color: black;\r\n    }\r\n\r\n        .btn.custom-primary:hover {\r\n            background-color: #5CA44A;\r\n        }\r\n\r\n    /*image*/\r\n\r\n    .corner-image {\r\n        position: fixed;\r\n        height: auto;\r\n    }\r\n\r\n    .left-image {\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n\r\n    .right-image {\r\n        top: 0;\r\n        right: 0;\r\n    }\r\n\r\n    .bottomcorner-image {\r\n        position: fixed;\r\n        height: auto;\r\n    }\r\n\r\n    .bottomleft-image {\r\n        bottom: 0;\r\n        left: 0;\r\n    }\r\n\r\n    .bottomright-image {\r\n        bottom: 0;\r\n        right: 0;\r\n    }\r\n</style>\r\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=88fd1614&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n    <h1>Naturliga Växter & Kreativa Trädgårdar</h1>\r\n    <h2>Välkommen!</h2>\r\n    <h3>Här kan du ta del av i första hand, växter och trädgårdar, men även andra ämnen som djur och mat.</h3>\r\n\r\n   <img src=\"../assets/HemBild.jpg\" aria-label=\"Hembild\" alt=\"Hembild\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\n</script>","import { render } from \"./HomeView.vue?vue&type=template&id=3090418b\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-d8b851da\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal show\",\n  style: {\"display\":\"block\"}\n}\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modal-title\" }, \"Bekräfta borttagning\", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"modal-body\" }, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Är du säker på att du vill radera detta inlägg?\")\n], -1))\n\n\r\n    import axios from 'axios';\r\n\r\n    // Definiera props\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ConfirmDeletePostModal',\n  props: {\r\n        isVisible: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        postId: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n    },\n  emits: ['confirm', 'cancel'],\n  setup(__props, { emit: __emit }) {\n\r\n    const props = __props;\r\n\r\n    // Emitter för att skicka eventen 'confirm' och 'cancel'\r\n    const emit = __emit;\r\n\r\n    // Funktion för att bekräfta borttagning\r\n    const confirmDelete = async () => {\r\n        try {\r\n            const token = localStorage.getItem('jwtToken');\n\r\n            // Gör DELETE-anropet här med Bearer-token och rätt headers\r\n            await axios.delete(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${props.postId}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json' // Lägg till om det behövs för DELETE\r\n                }\r\n            });\r\n\r\n            emit('confirm', props.postId); // Meddela att posten är raderad\r\n        } catch (error) {\r\n            console.error('Det uppstod ett fel vid borttagning av inlägget:', error);\r\n        } finally {\r\n            closeModal(); // Stäng modalen efter radering\r\n        }\r\n    };\r\n\r\n\r\n    // Funktion för att stänga modalen\r\n    const closeModal = () => {\r\n        emit('cancel'); // Skicka avbryt-händelsen\r\n    };\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (__props.isVisible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", { class: \"modal-dialog\" }, [\n          _createElementVNode(\"div\", { class: \"modal-content\" }, [\n            _createElementVNode(\"div\", { class: \"modal-header\" }, [\n              _hoisted_2,\n              _createElementVNode(\"button\", {\n                type: \"button\",\n                class: \"btn-close\",\n                onClick: closeModal\n              })\n            ]),\n            _hoisted_3,\n            _createElementVNode(\"div\", { class: \"modal-footer\" }, [\n              _createElementVNode(\"button\", {\n                class: \"btn btn-danger\",\n                onClick: confirmDelete\n              }, \"Radera\"),\n              _createElementVNode(\"button\", {\n                class: \"btn btn-secondary\",\n                onClick: closeModal\n              }, \"Avbryt\")\n            ])\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n    <div class=\"modal show\" style=\"display: block;\" v-if=\"isVisible\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Bekräfta borttagning</h5>\r\n                    <button type=\"button\" class=\"btn-close\" @click=\"closeModal\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <p>Är du säker på att du vill radera detta inlägg?</p>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button class=\"btn btn-danger\" @click=\"confirmDelete\">Radera</button>\r\n                    <button class=\"btn btn-secondary\" @click=\"closeModal\">Avbryt</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { defineProps, defineEmits } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Definiera props\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        postId: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n    });\r\n\r\n    // Emitter för att skicka eventen 'confirm' och 'cancel'\r\n    const emit = defineEmits(['confirm', 'cancel']);\r\n\r\n    // Funktion för att bekräfta borttagning\r\n    const confirmDelete = async () => {\r\n        try {\r\n            const token = localStorage.getItem('jwtToken');\n\r\n            // Gör DELETE-anropet här med Bearer-token och rätt headers\r\n            await axios.delete(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${props.postId}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json' // Lägg till om det behövs för DELETE\r\n                }\r\n            });\r\n\r\n            emit('confirm', props.postId); // Meddela att posten är raderad\r\n        } catch (error) {\r\n            console.error('Det uppstod ett fel vid borttagning av inlägget:', error);\r\n        } finally {\r\n            closeModal(); // Stäng modalen efter radering\r\n        }\r\n    };\r\n\r\n\r\n    // Funktion för att stänga modalen\r\n    const closeModal = () => {\r\n        emit('cancel'); // Skicka avbryt-händelsen\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    /* CSS-stilar */\r\n</style>\r\n","import script from \"./ConfirmDeletePostModal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ConfirmDeletePostModal.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ConfirmDeletePostModal.vue?vue&type=style&index=0&id=d8b851da&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d8b851da\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal show\",\n  style: {\"display\":\"block\"}\n}\nconst _hoisted_2 = { class: \"modal-dialog\" }\nconst _hoisted_3 = { class: \"modal-content\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modal-title\" }, \"Svara\", -1)\nconst _hoisted_5 = { class: \"modal-body\" }\nconst _hoisted_6 = { class: \"mb-3\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\",\n  class: \"form-label\"\n}, \"Svar\", -1)\nconst _hoisted_8 = { class: \"mb-3\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"image\",\n  class: \"form-label\"\n}, \"Ladda upp en bild (valfritt)\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Skicka\", -1)\n\nimport { ref } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Props för modalen\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CreateReplyModal',\n  props: {\r\n        isVisible: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        postId: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        parentReplyId: {\r\n            type: [Number, null],  // Tillåter både Number och null\r\n            default: null,\r\n        }\r\n    },\n  emits: ['close', 'replyCreated'],\n  setup(__props, { emit: __emit }) {\n\r\n    const props = __props;\r\n\r\n    // Emit för att stänga modalen och avisera att ett nytt svar har skapats\r\n    const emit = __emit;\r\n\r\n    // Reaktiva variabler för svaret och bilden\r\n    const content = ref('');\r\n    const replyImage = ref<File | null>(null);  // Hanterar den uppladdade bilden\r\n\r\n    // Hantera bildfilen som laddas upp\r\n    const onFileChange = (event: Event) => {\r\n        const target = event.target as HTMLInputElement;\r\n        if (target.files && target.files.length > 0) {\r\n            replyImage.value = target.files[0];  // Lagra den valda filen\r\n        }\r\n    };\r\n\r\n    // Skicka formulärdata till backend\r\n    const submitForm = async () => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n\r\n            // Kontrollera att token existerar\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            // Skapa FormData för att inkludera både text och bild\r\n            const formData = new FormData();\r\n            formData.append('Content', content.value);  // Lägg till svaret\r\n\r\n            // Om en bild är vald, lägg till den i FormData\r\n            if (replyImage.value) {\r\n                formData.append('Image', replyImage.value);  // Lägg till bilden\r\n            }\r\n\r\n            // Skicka POST-förfrågan till API med postId och parentReplyId som query-parametrar\r\n            let url = `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies?postId=${props.postId}`;\r\n\r\n            // Lägg till parentReplyId till URL:en endast om det inte är null\r\n            if (props.parentReplyId !== null) {\r\n                url += `&parentReplyId=${props.parentReplyId}`;\r\n            }\r\n\r\n            const response = await axios.post(url, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',  // Viktigt att specificera detta när vi skickar FormData\r\n                    Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                },\r\n            });\r\n\r\n\r\n            emit('replyCreated');  // Emitera event för att meddela att ett svar har skapats\r\n\r\n            // Återställ formuläret\r\n            content.value = '';\r\n            replyImage.value = null;\r\n\r\n            // Stäng modalen\r\n            closeModal();\r\n        } catch (error: any) {\r\n            console.error('Fel vid skapandet av svar:', error);\r\n            if (error.response && error.response.status === 401) {\r\n                console.error('Obehörig: Ingen giltig JWT-token eller inloggning krävs.');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // Funktion för att stänga modalen\r\n    const closeModal = () => {\r\n        emit('close');\r\n    };\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (__props.isVisible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"div\", { class: \"modal-header\" }, [\n              _hoisted_4,\n              _createElementVNode(\"button\", {\n                type: \"button\",\n                class: \"btn-close\",\n                onClick: closeModal\n              })\n            ]),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createElementVNode(\"form\", {\n                onSubmit: _withModifiers(submitForm, [\"prevent\"])\n              }, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _hoisted_7,\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    id: \"content\",\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((content).value = $event)),\n                    class: \"form-control\",\n                    required: \"\"\n                  }, null, 512), [\n                    [_vModelText, content.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _hoisted_9,\n                  _createElementVNode(\"input\", {\n                    type: \"file\",\n                    id: \"image\",\n                    onChange: onFileChange,\n                    class: \"form-control\",\n                    accept: \"image/*\"\n                  }, null, 32)\n                ]),\n                _hoisted_10\n              ], 32)\n            ])\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n    <div class=\"modal show\" style=\"display: block;\" v-if=\"isVisible\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Svara</h5>\r\n                    <button type=\"button\" class=\"btn-close\" @click=\"closeModal\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form @submit.prevent=\"submitForm\">\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"content\" class=\"form-label\">Svar</label>\r\n                            <textarea id=\"content\" v-model=\"content\" class=\"form-control\" required></textarea>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"image\" class=\"form-label\">Ladda upp en bild (valfritt)</label>\r\n                            <input type=\"file\" id=\"image\" @change=\"onFileChange\" class=\"form-control\" accept=\"image/*\">\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Skicka</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\n    import { ref } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Props för modalen\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        postId: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        parentReplyId: {\r\n            type: [Number, null],  // Tillåter både Number och null\r\n            default: null,\r\n        }\r\n    });\r\n\r\n    // Emit för att stänga modalen och avisera att ett nytt svar har skapats\r\n    const emit = defineEmits(['close', 'replyCreated']);\r\n\r\n    // Reaktiva variabler för svaret och bilden\r\n    const content = ref('');\r\n    const replyImage = ref<File | null>(null);  // Hanterar den uppladdade bilden\r\n\r\n    // Hantera bildfilen som laddas upp\r\n    const onFileChange = (event: Event) => {\r\n        const target = event.target as HTMLInputElement;\r\n        if (target.files && target.files.length > 0) {\r\n            replyImage.value = target.files[0];  // Lagra den valda filen\r\n        }\r\n    };\r\n\r\n    // Skicka formulärdata till backend\r\n    const submitForm = async () => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n\r\n            // Kontrollera att token existerar\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            // Skapa FormData för att inkludera både text och bild\r\n            const formData = new FormData();\r\n            formData.append('Content', content.value);  // Lägg till svaret\r\n\r\n            // Om en bild är vald, lägg till den i FormData\r\n            if (replyImage.value) {\r\n                formData.append('Image', replyImage.value);  // Lägg till bilden\r\n            }\r\n\r\n            // Skicka POST-förfrågan till API med postId och parentReplyId som query-parametrar\r\n            let url = `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies?postId=${props.postId}`;\r\n\r\n            // Lägg till parentReplyId till URL:en endast om det inte är null\r\n            if (props.parentReplyId !== null) {\r\n                url += `&parentReplyId=${props.parentReplyId}`;\r\n            }\r\n\r\n            const response = await axios.post(url, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',  // Viktigt att specificera detta när vi skickar FormData\r\n                    Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                },\r\n            });\r\n\r\n\r\n            emit('replyCreated');  // Emitera event för att meddela att ett svar har skapats\r\n\r\n            // Återställ formuläret\r\n            content.value = '';\r\n            replyImage.value = null;\r\n\r\n            // Stäng modalen\r\n            closeModal();\r\n        } catch (error: any) {\r\n            console.error('Fel vid skapandet av svar:', error);\r\n            if (error.response && error.response.status === 401) {\r\n                console.error('Obehörig: Ingen giltig JWT-token eller inloggning krävs.');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // Funktion för att stänga modalen\r\n    const closeModal = () => {\r\n        emit('close');\r\n    };\r\n</script>\r\n","import script from \"./CreateReplyModal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CreateReplyModal.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-5051ceec\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal show\",\n  style: {\"display\":\"block\"}\n}\nconst _hoisted_2 = { class: \"modal-dialog\" }\nconst _hoisted_3 = { class: \"modal-content\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modal-title\" }, \"Redigera inlägg\", -1))\nconst _hoisted_5 = { class: \"modal-body\" }\nconst _hoisted_6 = { class: \"mb-3\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\",\n  class: \"form-label\"\n}, \"Titel\", -1))\nconst _hoisted_8 = { class: \"mb-3\" }\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\",\n  class: \"form-label\"\n}, \"Innehåll\", -1))\nconst _hoisted_10 = { class: \"mb-3\" }\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"category\",\n  class: \"form-label\"\n}, \"Kategori\", -1))\nconst _hoisted_12 = [\"value\"]\nconst _hoisted_13 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Spara\", -1))\n\nimport { ref, onMounted, watch } from 'vue';\r\nimport axios from 'axios';\r\n\r\n// Props för modalen\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'EditPostModal',\n  props: {\r\n    isVisible: {\r\n        type: Boolean,\r\n        required: true,\r\n    },\r\n    post: {\r\n        type: Object,\r\n        required: true, // Förväntar sig ett post-objekt med befintliga värden\r\n    },\r\n},\n  emits: ['close', 'postUpdated'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\n// Emit för att stänga modalen och uppdatera inlägg\r\nconst emit = __emit;\r\n\r\n// Reaktiva data för titel, innehåll och kategori\r\nconst title = ref(props.post.title); // Fyll i med postens titel\r\nconst content = ref(props.post.content); // Fyll i med postens innehåll\r\nconst selectedCategory = ref(props.post.categoryId); // Fyll i med postens kategori\r\nconst categories = ref([]); // Alla kategorier\r\n\r\n// Funktion för att stänga modalen\r\nconst closeModal = () => {\r\n    emit('close');\r\n};\r\n\r\n// Funktion för att hämta alla kategorier från API\r\nconst fetchCategories = async () => {\r\n    try {\r\n        const response = await axios.get('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Category'); // Hämta från API\r\n        categories.value = response.data; // Spara kategorierna\r\n    } catch (error) {\r\n        console.error('Misslyckades med att hämta kategorier:', error);\r\n    }\r\n};\r\n\r\n    // Funktion för att hantera formulärinlämning och uppdatera inlägget\r\n    const submitForm = async () => {\r\n\r\n        try {\r\n\r\n            const formData = new FormData();\r\n            formData.append('Title', title.value);\r\n            formData.append('Content', content.value);\r\n            formData.append('categoryId', String(selectedCategory.value));  // Konvertera till sträng om det är ett nummer\r\n\r\n            // Logga serverns svar för att se vad API:et returnerar\r\n            //console.log('Serverns svar:', response);\r\n            const token = localStorage.getItem('jwtToken');\n            if (!token) {\n                console.error('Ingen JWT-token hittades i localStorage.');\n                return;\n            }\r\n            await axios.put(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${props.post.postId}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n            });\r\n            // Emitera en händelse för att uppdatera listan av inlägg\r\n            emit('postUpdated');\r\n\r\n            // Stäng modalen efter uppdateringen\r\n            closeModal();\r\n        } catch (error) {\r\n            // Logga detaljerat felmeddelande om något går fel\r\n            console.error('Ett fel uppstod vid uppdateringen av inlägget:', error);\r\n\r\n            // Logga ut eventuella detaljer från serverns felmeddelande\r\n            if (error.response) {\r\n                console.error('Server fel:', error.response.data);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n// Uppdatera reaktiva data om posten ändras (vid öppning av ny post)\r\nwatch(() => props.post, (newPost) => {\r\n    Title.value = newPost.Title;\r\n    Content.value = newPost.Content;\r\n    selectedCategory.value = newPost.categoryId;\r\n});\r\n\r\n// Hämta kategorier när komponenten monteras\r\nonMounted(() => {\r\n    fetchCategories();\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (__props.isVisible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"div\", { class: \"modal-header\" }, [\n              _hoisted_4,\n              _createElementVNode(\"button\", {\n                type: \"button\",\n                class: \"btn-close\",\n                onClick: closeModal\n              })\n            ]),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createElementVNode(\"form\", {\n                onSubmit: _withModifiers(submitForm, [\"prevent\"])\n              }, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _hoisted_7,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"text\",\n                    id: \"title\",\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((title).value = $event)),\n                    class: \"form-control\",\n                    required: \"\"\n                  }, null, 512), [\n                    [_vModelText, title.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _hoisted_9,\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    id: \"content\",\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((content).value = $event)),\n                    class: \"form-control\",\n                    required: \"\"\n                  }, null, 512), [\n                    [_vModelText, content.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _hoisted_11,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    id: \"category\",\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((selectedCategory).value = $event)),\n                    class: \"form-select\",\n                    required: \"\"\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(categories.value, (category) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: category.categoryId,\n                        value: category.categoryId\n                      }, _toDisplayString(category.name), 9, _hoisted_12))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, selectedCategory.value]\n                  ])\n                ]),\n                _hoisted_13\n              ], 32)\n            ])\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n    <!-- Modalen visas endast när `isVisible` är sant -->\r\n    <div v-if=\"isVisible\" class=\"modal show\" style=\"display: block;\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Redigera inlägg</h5>\r\n                    <!-- När man klickar på knappen, emit 'close' eventet för att stänga modalen -->\r\n                    <button type=\"button\" class=\"btn-close\" @click=\"closeModal\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form @submit.prevent=\"submitForm\">\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"title\" class=\"form-label\">Titel</label>\r\n                            <input type=\"text\" id=\"title\" v-model=\"title\" class=\"form-control\" required />\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"content\" class=\"form-label\">Innehåll</label>\r\n                            <textarea id=\"content\" v-model=\"content\" class=\"form-control\" required></textarea>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"category\" class=\"form-label\">Kategori</label>\r\n                            <!-- Dropdown-lista för att välja kategori -->\r\n                            <select id=\"category\" v-model=\"selectedCategory\" class=\"form-select\" required>\r\n                                <option v-for=\"category in categories\" :key=\"category.categoryId\" :value=\"category.categoryId\">\r\n                                    {{ category.name }}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Spara</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport axios from 'axios';\r\n\r\n// Props för modalen\r\nconst props = defineProps({\r\n    isVisible: {\r\n        type: Boolean,\r\n        required: true,\r\n    },\r\n    post: {\r\n        type: Object,\r\n        required: true, // Förväntar sig ett post-objekt med befintliga värden\r\n    },\r\n});\r\n\r\n// Emit för att stänga modalen och uppdatera inlägg\r\nconst emit = defineEmits(['close', 'postUpdated']);\r\n\r\n// Reaktiva data för titel, innehåll och kategori\r\nconst title = ref(props.post.title); // Fyll i med postens titel\r\nconst content = ref(props.post.content); // Fyll i med postens innehåll\r\nconst selectedCategory = ref(props.post.categoryId); // Fyll i med postens kategori\r\nconst categories = ref([]); // Alla kategorier\r\n\r\n// Funktion för att stänga modalen\r\nconst closeModal = () => {\r\n    emit('close');\r\n};\r\n\r\n// Funktion för att hämta alla kategorier från API\r\nconst fetchCategories = async () => {\r\n    try {\r\n        const response = await axios.get('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Category'); // Hämta från API\r\n        categories.value = response.data; // Spara kategorierna\r\n    } catch (error) {\r\n        console.error('Misslyckades med att hämta kategorier:', error);\r\n    }\r\n};\r\n\r\n    // Funktion för att hantera formulärinlämning och uppdatera inlägget\r\n    const submitForm = async () => {\r\n\r\n        try {\r\n\r\n            const formData = new FormData();\r\n            formData.append('Title', title.value);\r\n            formData.append('Content', content.value);\r\n            formData.append('categoryId', String(selectedCategory.value));  // Konvertera till sträng om det är ett nummer\r\n\r\n            // Logga serverns svar för att se vad API:et returnerar\r\n            //console.log('Serverns svar:', response);\r\n            const token = localStorage.getItem('jwtToken');\n            if (!token) {\n                console.error('Ingen JWT-token hittades i localStorage.');\n                return;\n            }\r\n            await axios.put(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${props.post.postId}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n            });\r\n            // Emitera en händelse för att uppdatera listan av inlägg\r\n            emit('postUpdated');\r\n\r\n            // Stäng modalen efter uppdateringen\r\n            closeModal();\r\n        } catch (error) {\r\n            // Logga detaljerat felmeddelande om något går fel\r\n            console.error('Ett fel uppstod vid uppdateringen av inlägget:', error);\r\n\r\n            // Logga ut eventuella detaljer från serverns felmeddelande\r\n            if (error.response) {\r\n                console.error('Server fel:', error.response.data);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n// Uppdatera reaktiva data om posten ändras (vid öppning av ny post)\r\nwatch(() => props.post, (newPost) => {\r\n    Title.value = newPost.Title;\r\n    Content.value = newPost.Content;\r\n    selectedCategory.value = newPost.categoryId;\r\n});\r\n\r\n// Hämta kategorier när komponenten monteras\r\nonMounted(() => {\r\n    fetchCategories();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n    .modal {\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n    }\r\n</style>\r\n","import script from \"./EditPostModal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./EditPostModal.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./EditPostModal.vue?vue&type=style&index=0&id=5051ceec&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5051ceec\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-50085b2f\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal show\",\n  style: {\"display\":\"block\"}\n}\nconst _hoisted_2 = { class: \"modal-dialog\" }\nconst _hoisted_3 = { class: \"modal-content\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modal-title\" }, \"Redigera Svar\", -1))\nconst _hoisted_5 = { class: \"modal-body\" }\nconst _hoisted_6 = { class: \"mb-3\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\",\n  class: \"form-label\"\n}, \"Innehåll\", -1))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Spara\", -1))\n\nimport { ref, watch } from 'vue';\r\nimport axios from 'axios';\r\n\r\n// Props för modalen\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'EditReplyModal',\n  props: {\r\n    isVisible: {\r\n        type: Boolean,\r\n        required: true,\r\n    },\r\n    reply: {\r\n        type: Object,\r\n        required: true, // Förväntar sig ett reply-objekt med befintliga värden\r\n    },\r\n},\n  emits: ['close', 'replyUpdated'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\n// Emit för att stänga modalen och uppdatera svaret\r\nconst emit = __emit;\r\n\r\n// Reaktiva data för innehåll\r\nconst content = ref(props.reply.content); // Fyll i med befintligt svarsinnehåll\r\n\r\n// Funktion för att stänga modalen\r\nconst closeModal = () => {\r\n    emit('close');\r\n};\r\n\r\n// Funktion för att hantera formulärinlämning och uppdatera svaret\r\nconst submitForm = async () => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('Content', content.value);\r\n        const token = localStorage.getItem('jwtToken');\n        if (!token) {\n            console.error('Ingen JWT-token hittades i localStorage.');\n            return;\n        }\r\n        await axios.put(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${props.reply.replyId}`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        });\r\n      \r\n        // Emitera en händelse för att uppdatera listan av svar\r\n        emit('replyUpdated');\r\n\r\n        // Stäng modalen efter uppdateringen\r\n        closeModal();\r\n    } catch (error) {\r\n        console.error('Ett fel uppstod vid uppdateringen av svaret:', error);\r\n    }\r\n};\r\n\r\n// Uppdatera reaktiva data om svaret ändras (vid öppning av nytt svar)\r\nwatch(() => props.reply, (newReply) => {\r\n    content.value = newReply.content;\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (__props.isVisible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"div\", { class: \"modal-header\" }, [\n              _hoisted_4,\n              _createElementVNode(\"button\", {\n                type: \"button\",\n                class: \"btn-close\",\n                onClick: closeModal\n              })\n            ]),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createElementVNode(\"form\", {\n                onSubmit: _withModifiers(submitForm, [\"prevent\"])\n              }, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _hoisted_7,\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    id: \"content\",\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((content).value = $event)),\n                    class: \"form-control\",\n                    required: \"\"\n                  }, null, 512), [\n                    [_vModelText, content.value]\n                  ])\n                ]),\n                _hoisted_8\n              ], 32)\n            ])\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n    <!-- Modalen visas endast när `isVisible` är sant -->\r\n    <div v-if=\"isVisible\" class=\"modal show\" style=\"display: block;\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Redigera Svar</h5>\r\n                    <!-- Stäng modal-knappen -->\r\n                    <button type=\"button\" class=\"btn-close\" @click=\"closeModal\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form @submit.prevent=\"submitForm\">\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"content\" class=\"form-label\">Innehåll</label>\r\n                            <textarea id=\"content\" v-model=\"content\" class=\"form-control\" required></textarea>\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Spara</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, watch } from 'vue';\r\nimport axios from 'axios';\r\n\r\n// Props för modalen\r\nconst props = defineProps({\r\n    isVisible: {\r\n        type: Boolean,\r\n        required: true,\r\n    },\r\n    reply: {\r\n        type: Object,\r\n        required: true, // Förväntar sig ett reply-objekt med befintliga värden\r\n    },\r\n});\r\n\r\n// Emit för att stänga modalen och uppdatera svaret\r\nconst emit = defineEmits(['close', 'replyUpdated']);\r\n\r\n// Reaktiva data för innehåll\r\nconst content = ref(props.reply.content); // Fyll i med befintligt svarsinnehåll\r\n\r\n// Funktion för att stänga modalen\r\nconst closeModal = () => {\r\n    emit('close');\r\n};\r\n\r\n// Funktion för att hantera formulärinlämning och uppdatera svaret\r\nconst submitForm = async () => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('Content', content.value);\r\n        const token = localStorage.getItem('jwtToken');\n        if (!token) {\n            console.error('Ingen JWT-token hittades i localStorage.');\n            return;\n        }\r\n        await axios.put(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${props.reply.replyId}`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        });\r\n      \r\n        // Emitera en händelse för att uppdatera listan av svar\r\n        emit('replyUpdated');\r\n\r\n        // Stäng modalen efter uppdateringen\r\n        closeModal();\r\n    } catch (error) {\r\n        console.error('Ett fel uppstod vid uppdateringen av svaret:', error);\r\n    }\r\n};\r\n\r\n// Uppdatera reaktiva data om svaret ändras (vid öppning av nytt svar)\r\nwatch(() => props.reply, (newReply) => {\r\n    content.value = newReply.content;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n    .modal {\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n    }\r\n</style>\r\n","import script from \"./EditReplyModal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./EditReplyModal.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./EditReplyModal.vue?vue&type=style&index=0&id=50085b2f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-50085b2f\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, createBlock as _createBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-0d7eaeb0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"row\" }\nconst _hoisted_2 = { class: \"d-flex justify-content-between mb-3\" }\nconst _hoisted_3 = { class: \"dropdown\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-secondary dropdown-toggle\",\n  type: \"button\",\n  id: \"sortDropdown\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n}, \" Sortera Inlägg \", -1))\nconst _hoisted_5 = {\n  class: \"dropdown-menu\",\n  \"aria-labelledby\": \"sortDropdown\"\n}\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"hr\", { class: \"dropdown-divider\" })\n], -1))\nconst _hoisted_8 = { class: \"postborder\" }\nconst _hoisted_9 = { class: \"posttitle\" }\nconst _hoisted_10 = { class: \"postcontent\" }\nconst _hoisted_11 = { key: 0 }\nconst _hoisted_12 = [\"src\"]\nconst _hoisted_13 = { class: \"postcontainer\" }\nconst _hoisted_14 = { class: \"left-section\" }\nconst _hoisted_15 = { class: \"leftsectioncontainer\" }\nconst _hoisted_16 = { class: \"postcategory\" }\nconst _hoisted_17 = { class: \"postauthor\" }\nconst _hoisted_18 = { class: \"middle-section\" }\nconst _hoisted_19 = { class: \"middlesectioncontainer\" }\nconst _hoisted_20 = { class: \"postlikes\" }\nconst _hoisted_21 = { class: \"right-section\" }\nconst _hoisted_22 = { class: \"rightsectioncontainer\" }\nconst _hoisted_23 = { class: \"postcreatedat\" }\nconst _hoisted_24 = { class: \"postlastupdate\" }\nconst _hoisted_25 = { class: \"buttoncontainer\" }\nconst _hoisted_26 = [\"onClick\"]\nconst _hoisted_27 = [\"onClick\"]\nconst _hoisted_28 = [\"onClick\"]\nconst _hoisted_29 = [\"onClick\"]\nconst _hoisted_30 = {\n  key: 0,\n  class: \"accordion\",\n  id: \"accordionReplies\"\n}\nconst _hoisted_31 = { class: \"accordion-item\" }\nconst _hoisted_32 = [\"id\"]\nconst _hoisted_33 = [\"data-bs-target\", \"aria-controls\"]\nconst _hoisted_34 = [\"id\", \"aria-labelledby\"]\nconst _hoisted_35 = { class: \"accordion-body\" }\nconst _hoisted_36 = { class: \"replytextbox\" }\nconst _hoisted_37 = { key: 0 }\nconst _hoisted_38 = [\"src\"]\nconst _hoisted_39 = [\"onClick\"]\nconst _hoisted_40 = [\"onClick\"]\nconst _hoisted_41 = [\"onClick\"]\nconst _hoisted_42 = [\"onClick\"]\nconst _hoisted_43 = { class: \"pagination-controls\" }\nconst _hoisted_44 = [\"disabled\"]\nconst _hoisted_45 = [\"disabled\"]\n\nimport { ref, computed, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n    import ConfirmDeletePostModal from './ConfirmDeletePostModal.vue';\r\n    import ConfirmDeleteReplyModal from './ConfirmDeleteReplyModal.vue';\r\n    import CreateReplyModal from './CreateReplyModal.vue';\r\n    import EditPostModal from './EditPostModal.vue';\r\n    import EditReplyModal from './EditReplyModal.vue';\r\n\r\n    interface Post {\r\n        postId: number;\r\n        title: string;\r\n        content: string;\r\n        createdAt: string;\r\n        updatedAt: string;\r\n        author: string;\r\n        likes: number;\r\n        categoryId: number;\r\n        categoryName?: string;\r\n        imageBase64?: string;\r\n        replies?: Reply[];\r\n        userHasLiked: boolean;\r\n        canEdit: boolean;\r\n    }\r\n\r\n    interface Reply {\r\n        replyId: number;\r\n        content: string;\r\n        author: string;\r\n        createdAt: string;\r\n        postId: number;\r\n        likes: number;\r\n        imageBase64?: string;\r\n        userHasLiked: boolean;\r\n        canEdit: boolean;\r\n    }\r\n\r\n    interface Category {\r\n        categoryId: number;\r\n        name: string;\r\n    }\r\n\r\n    // Reaktiva variabler\r\n    const postsPerPage = 10;\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'PostList',\n  setup(__props) {\n\r\n    const posts = ref<Post[]>([]);\r\n    const allPosts = ref<Post[]>([]); // Kopia för alla inlägg\r\n    const categories = ref<Category[]>([]);\r\n    const currentPage = ref(1);\r\n    const isLoggedIn = ref(false);\r\n\r\n    // Paginering\r\n    const totalPages = computed(() => Math.ceil(posts.value.length / postsPerPage));\r\n\r\n    const paginatedPosts = computed(() => {\r\n        const start = (currentPage.value - 1) * postsPerPage;\r\n        const end = start + postsPerPage;\r\n        return posts.value.slice(start, end);\r\n    });\r\n\r\n    const formatDate = (dateString: string) => dateString.split('T')[0];\r\n\r\n    // Modal- och likes-relaterade variabler och funktioner\r\n    const isConfirmDeleteModalVisible = ref(false);\r\n    const isConfirmDeleteReplyModalVisible = ref(false);\r\n    const isCreateReplyModalVisible = ref(false);\r\n    const selectedPostIdToDelete = ref<number | null>(null);\r\n    const selectedReplyIdToDelete = ref<number | null>(null);\r\n    const selectedPostId = ref<number | null>(null);\r\n    const selectedParentReplyId = ref<number | null>(null);\r\n    const isEditPostModalVisible = ref(false);\r\n    const selectedPost = ref<Post | null>(null);\r\n    const isEditReplyModalVisible = ref(false);\r\n    const selectedReply = ref<Reply | null>(null);\r\n\r\n    // Kontrollera om användaren är inloggad genom att kontrollera om JWT-token finns i localStorage\r\n    const checkLoginStatus = () => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        isLoggedIn.value = !!token;  // Sätt true om token finns, annars false\r\n    };\r\n\r\n\r\n    // Funktion för att öppna EditPostModal\r\n    const openEditPostModal = (post: Post) => {\r\n        selectedPost.value = post;\r\n        isEditPostModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga EditPostModal\r\n    const closeEditPostModal = () => {\r\n        isEditPostModalVisible.value = false;\r\n    };\r\n\r\n    // Funktion för att öppna CreateReplyModal\r\n    const openCreateReplyModal = (postId: number, parentReplyId: number | null) => {\r\n        selectedPostId.value = postId;\r\n        selectedParentReplyId.value = parentReplyId;\r\n        isCreateReplyModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga CreateReplyModal\r\n    const closeCreateReplyModal = () => {\r\n        isCreateReplyModalVisible.value = false;\r\n        selectedPostId.value = null;\r\n        selectedParentReplyId.value = null;\r\n    };\r\n\r\n    // Funktion för att öppna EditReplyModal\r\n    const openEditReplyModal = (reply: Reply) => {\r\n        selectedReply.value = reply;\r\n        isEditReplyModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga EditReplyModal\r\n    const closeEditReplyModal = () => {\r\n        isEditReplyModalVisible.value = false;\r\n    };\r\n\r\n    // Funktion för att öppna borttagningsmodalen för inlägg\r\n    const showConfirmDeleteModal = (postId: number) => {\r\n        selectedPostIdToDelete.value = postId;\r\n        isConfirmDeleteModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga borttagningsmodalen för inlägg\r\n    const closeConfirmDeleteModal = () => {\r\n        isConfirmDeleteModalVisible.value = false;\r\n        selectedPostIdToDelete.value = null;\r\n    };\r\n\r\n    // Funktion för att öppna borttagningsmodalen för svar\r\n    const showConfirmDeleteReplyModal = (replyId: number) => {\r\n        selectedReplyIdToDelete.value = replyId;\r\n        isConfirmDeleteReplyModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga borttagningsmodalen för svar\r\n    const closeConfirmDeleteReplyModal = () => {\r\n        isConfirmDeleteReplyModalVisible.value = false;\r\n        selectedReplyIdToDelete.value = null;\r\n    };\r\n\r\n    // Paginering\r\n    const prevPage = () => {\r\n        if (currentPage.value > 1) {\r\n            currentPage.value--;\r\n        }\r\n    };\r\n\r\n    const nextPage = () => {\r\n        if (currentPage.value < totalPages.value) {\r\n            currentPage.value++;\r\n        }\r\n    };\r\n\r\n    // Funktion för att hämta alla inlägg\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const response = await axios.get<Post[]>('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post');\r\n            const postsWithReplies = await Promise.all(\r\n                response.data.map(async (post) => {\r\n                    const replies = await fetchRepliesForPost(post.postId);\r\n                    const category = categories.value.find(cat => cat.categoryId === post.categoryId);\r\n                    const userHasLiked = await HasUserLikedPost(post.postId);\r\n\r\n                    // Kontrollera om användaren kan redigera/radera posten\r\n                    const canEdit = await checkEditPermissions(post.postId);\r\n\r\n                    return {\r\n                        ...post,\r\n                        replies,\r\n                        categoryName: category ? category.name : 'Okänd kategori',\r\n                        imageBase64: post.imageBase64,\r\n                        userHasLiked,\r\n                        canEdit,\r\n                    };\r\n                })\r\n            );\r\n            posts.value = postsWithReplies;\r\n            allPosts.value = postsWithReplies;\r\n        } catch (error) {\r\n            console.error('Fel vid hämtning av inlägg:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // Hämta replies för ett inlägg\r\n    const fetchRepliesForPost = async (postId: number) => {\r\n        try {\r\n            const response = await axios.get<Reply[]>(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/post/${postId}`);\r\n            const repliesWithAdditionalInfo = await Promise.all(\r\n                response.data.map(async (reply) => {\r\n                    const userHasLiked = await HasUserLikedReply(reply.replyId);\r\n                    const canEdit = await checkEditPermissionsForReply(reply.replyId);\r\n\r\n                    return {\r\n                        ...reply,\r\n                        imageBase64: reply.imageBase64 || null,\r\n                        userHasLiked,\r\n                        canEdit,\r\n                    };\r\n                })\r\n            );\r\n            return repliesWithAdditionalInfo;\r\n        } catch (error: any) {\r\n            if (error.response && error.response.status === 404) {\r\n                console.info(`Inga replies hittades för postId: ${postId}.`);\r\n                return [];  // Returnera en tom array om inga replies hittas\r\n            } else {\r\n                console.error('Fel vid hämtning av replies:', error);\r\n                return [];\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    // Funktion för att hämta kategorier\r\n    const fetchCategories = async () => {\r\n        try {\r\n            const response = await axios.get<Category[]>('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Category');\r\n            categories.value = response.data;\r\n        } catch (error) {\r\n            console.error('Fel vid hämtning av kategorier:', error);\r\n        }\r\n    };\r\n\r\n    // Sortera inlägg\r\n    const sortPosts = (sortBy: string) => {\r\n        posts.value = [...allPosts.value];\r\n        switch (sortBy) {\r\n            case 'likes':\r\n                posts.value.sort((a, b) => b.likes - a.likes);\r\n                break;\r\n            case 'latest':\r\n                posts.value.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\r\n                break;\r\n            case 'oldest':\r\n                posts.value.sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\r\n                break;\r\n        }\r\n        currentPage.value = 1;\r\n    };\r\n\r\n    const likePost = async (postId: number) => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n\r\n            // Kontrollera att token existerar\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            // Anropa backend-API för att gilla posten med Bearer-token (JWT)\r\n            const response = await axios.post(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${postId}/like`,\r\n                {}, // Tom body för POST-förfrågan\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}` // Skicka JWT-token i Authorization-headern\r\n                    }\r\n                }\r\n            );\r\n\r\n            const message = response.data.message;\r\n\r\n            // Uppdatera lokalt antal likes och userHasLiked om anropet lyckas\r\n            const post = posts.value.find(p => p.postId === postId);\r\n            if (post) {\r\n                post.likes += 1;\r\n                post.userHasLiked = true;  // Uppdatera flaggan direkt för att reflektera att användaren har gillat\r\n            }\r\n\r\n        } catch (error: any) {\r\n            if (error.response && error.response.data.message) {\r\n                // Specifika felmeddelanden från API:t\r\n                console.error(error.response.data.message);\r\n            } else {\r\n                // Annat fel (nätverksproblem eller oväntat problem)\r\n                console.error('Ett fel uppstod vid gillningen:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const likeReply = async (replyId: number) => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n\r\n            // Kontrollera att token existerar\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            // Anropa backend-API för att gilla reply med Bearer-token (JWT)\r\n            const response = await axios.post(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${replyId}/like`,\r\n                {}, // Tom body för POST-förfrågan\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}` // Skicka JWT-token i Authorization-headern\r\n                    }\r\n                }\r\n            );\r\n\r\n            const message = response.data.message;\r\n\r\n            // Uppdatera lokalt antal likes och userHasLiked om anropet lyckas\r\n            for (const post of posts.value) {\r\n                const reply = post.replies?.find(r => r.replyId === replyId);\r\n                if (reply) {\r\n                    reply.likes += 1;\r\n                    reply.userHasLiked = true;  // Uppdatera flaggan direkt för att reflektera att användaren har gillat\r\n                    break; // Avbryt loopen när vi har hittat och uppdaterat rätt reply\r\n                }\r\n            }\r\n\r\n        } catch (error: any) {\r\n            if (error.response && error.response.data.message) {\r\n                // Specifika felmeddelanden från API:t\r\n                console.error(error.response.data.message);\r\n            } else {\r\n                // Annat fel (nätverksproblem eller oväntat problem)\r\n                console.error('Ett fel uppstod vid gillningen av reply:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const unlikePost = async (postId: number) => {\r\n        try {\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            const response = await axios.post(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${postId}/unlike`,  // Endpoint för att sluta gilla\r\n                {},\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`, // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            const post = posts.value.find(p => p.postId === postId);\r\n            if (post) {\r\n                post.likes -= 1;  // Minska likes lokalt\r\n                post.userHasLiked = false;  // Markera att användaren inte längre har gillat posten\r\n            }\r\n\r\n        } catch (error: any) {\r\n            console.error('Fel vid att sluta gilla posten:', error);\r\n        }\r\n    };\r\n\r\n    const HasUserLikedPost = async (postId: number): Promise<boolean> => {\r\n        try {\r\n            // Hämta JWT-token från localStorage\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.warn('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n                return false;  // Användaren är inte inloggad, returnera false\r\n            }\r\n\r\n            // Anropa backend för att kontrollera om användaren har gillat posten\r\n            const response = await axios.get<boolean>(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${postId}/hasLiked`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            return response.data;  // Returnera true eller false baserat på backend-svaret\r\n\r\n        } catch (error: any) {\r\n            // Om det är en 401 Unauthorized, logga ett specifikt meddelande\r\n            if (error.response && error.response.status === 401) {\r\n                console.warn('Användaren är inte auktoriserad eller token har löpt ut.');\r\n            } else {\r\n                console.error('Fel vid kontroll av om användaren har gillat posten:', error);\r\n            }\r\n\r\n            return false;  // Vid fel, returnera false som standard\r\n        }\r\n    };\r\n\r\n\r\n    const unlikeReply = async (replyId: number) => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            // Optimistisk uppdatering - hitta rätt post och reply\r\n            for (const post of posts.value) {\r\n                const reply = post.replies?.find(r => r.replyId === replyId);\r\n                if (reply) {\r\n                    // Minska likes lokalt och markera reply som \"ogillad\"\r\n                    reply.likes -= 1;\r\n                    reply.userHasLiked = false;\r\n\r\n                    // Anropa backend för att sluta gilla reply\r\n                    const response = await axios.post(\r\n                        `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${replyId}/unlike`,\r\n                        {},\r\n                        {\r\n                            headers: {\r\n                                Authorization: `Bearer ${token}`, // Skicka JWT-token i Authorization-headern\r\n                            },\r\n                        }\r\n                    );\r\n\r\n                    break; // Avbryt loopen när rätt reply har uppdaterats\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Fel vid att sluta gilla replyn:', error);\r\n        }\r\n    };\r\n\r\n    const HasUserLikedReply = async (replyId: number): Promise<boolean> => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.warn('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n                return false; // Användaren är inte inloggad, returnera false\r\n            }\r\n\r\n            // Anropa backend för att kontrollera om användaren har gillat reply\r\n            const response = await axios.get<boolean>(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${replyId}/hasLiked`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            return response.data;  // Returnera true eller false baserat på backend-svaret\r\n\r\n        } catch (error: any) {\r\n            // Om det är en 401 Unauthorized, logga ett specifikt meddelande\r\n            if (error.response && error.response.status === 401) {\r\n                console.warn('Användaren är inte auktoriserad eller token har löpt ut.');\r\n            } else {\r\n                console.error('Fel vid kontroll av om användaren har gillat replyn:', error);\r\n            }\r\n\r\n            return false;  // Vid fel, returnera false som standard\r\n        }\r\n    };\r\n\r\n\r\n    const checkEditPermissions = async (postId: number): Promise<boolean> => {\r\n        try {\r\n            // Hämta JWT-token från localStorage\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.warn('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n                return false;  // Användaren är inte inloggad, returnera false\r\n            }\r\n\r\n            // Anropa backend för att kontrollera redigeringsbehörighet\r\n            const response = await axios.get(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${postId}/can-edit`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            return response.data.canEdit;  // Returnera true eller false baserat på backend-svaret\r\n\r\n        } catch (error: any) {\r\n            // Om det är en 401 Unauthorized, logga ett specifikt meddelande\r\n            if (error.response && error.response.status === 401) {\r\n                console.warn('Användaren är inte auktoriserad eller token har löpt ut.');\r\n            } else {\r\n                console.error('Fel vid kontroll av redigeringsbehörighet:', error);\r\n            }\r\n\r\n            return false;  // Vid fel, returnera false som standard\r\n        }\r\n    };\r\n\r\n\r\n    const checkEditPermissionsForReply = async (replyId: number): Promise<boolean> => {\r\n        try {\r\n            // Hämta JWT-token från localStorage\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.warn('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n                return false;  // Användaren är inte inloggad, returnera false\r\n            }\r\n\r\n            // Anropa backend för att kontrollera redigeringsbehörighet\r\n            const response = await axios.get(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${replyId}/can-edit`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            return response.data.canEdit;  // Returnera true eller false baserat på backend-svaret\r\n\r\n        } catch (error: any) {\r\n            // Om det är en 401 Unauthorized, logga ett specifikt meddelande\r\n            if (error.response && error.response.status === 401) {\r\n                console.warn('Användaren är inte auktoriserad eller token har löpt ut.');\r\n            } else {\r\n                console.error('Fel vid kontroll av redigeringsbehörighet för reply:', error);\r\n            }\r\n\r\n            return false;  // Vid fel, returnera false som standard\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // Sortera efter kategori\r\n    const sortPostsByCategory = (categoryId: number) => {\r\n        posts.value = allPosts.value.filter(post => post.categoryId === categoryId);\r\n        currentPage.value = 1;\r\n    };\r\n\r\n    // Återställ inlägg\r\n    const resetPosts = () => {\r\n        posts.value = [...allPosts.value];\r\n        currentPage.value = 1;\r\n    };\r\n\r\n    // Lifecycle hook för att hämta data\r\n    onMounted(async () => {\r\n        await fetchCategories();\r\n        await fetchPosts();\r\n        checkLoginStatus();\r\n    });\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _hoisted_4,\n        _createElementVNode(\"ul\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(categories.value, (category) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: category.categoryId\n            }, [\n              _createElementVNode(\"a\", {\n                class: \"dropdown-item\",\n                href: \"#\",\n                onClick: _withModifiers(($event: any) => (sortPostsByCategory(category.categoryId)), [\"prevent\"])\n              }, _toDisplayString(category.name), 9, _hoisted_6)\n            ]))\n          }), 128)),\n          _hoisted_7,\n          _createElementVNode(\"li\", null, [\n            _createElementVNode(\"a\", {\n              class: \"dropdown-item\",\n              href: \"#\",\n              onClick: _cache[0] || (_cache[0] = _withModifiers(($event: any) => (sortPosts('likes')), [\"prevent\"]))\n            }, \"Antal Gillningar\")\n          ]),\n          _createElementVNode(\"li\", null, [\n            _createElementVNode(\"a\", {\n              class: \"dropdown-item\",\n              href: \"#\",\n              onClick: _cache[1] || (_cache[1] = _withModifiers(($event: any) => (sortPosts('latest')), [\"prevent\"]))\n            }, \"Senaste Inlägg\")\n          ]),\n          _createElementVNode(\"li\", null, [\n            _createElementVNode(\"a\", {\n              class: \"dropdown-item\",\n              href: \"#\",\n              onClick: _cache[2] || (_cache[2] = _withModifiers(($event: any) => (sortPosts('oldest')), [\"prevent\"]))\n            }, \"Tidigaste Inlägg\")\n          ]),\n          _createElementVNode(\"li\", null, [\n            _createElementVNode(\"a\", {\n              class: \"dropdown-item\",\n              href: \"#\",\n              onClick: _withModifiers(resetPosts, [\"prevent\"])\n            }, \"Återställ Filter\")\n          ])\n        ])\n      ])\n    ]),\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paginatedPosts.value, (post) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        key: post.postId,\n        class: \"post\"\n      }, [\n        _createElementVNode(\"div\", _hoisted_8, [\n          _createElementVNode(\"h3\", _hoisted_9, _toDisplayString(post.title), 1),\n          _createElementVNode(\"p\", _hoisted_10, _toDisplayString(post.content), 1),\n          (post.imageBase64)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n                _createElementVNode(\"img\", {\n                  src: 'data:image/jpeg;base64,' + post.imageBase64,\n                  alt: \"Post Image\",\n                  class: \"img-fluid post-image\"\n                }, null, 8, _hoisted_12)\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_13, [\n            _createElementVNode(\"div\", _hoisted_14, [\n              _createElementVNode(\"div\", _hoisted_15, [\n                _createElementVNode(\"p\", _hoisted_16, \"Kategori: \" + _toDisplayString(post.categoryName), 1),\n                _createElementVNode(\"p\", _hoisted_17, \"Skrivet av: \" + _toDisplayString(post.author), 1)\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_18, [\n              _createElementVNode(\"div\", _hoisted_19, [\n                _createElementVNode(\"p\", _hoisted_20, \"Antal gillningar: \" + _toDisplayString(post.likes), 1)\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_21, [\n              _createElementVNode(\"div\", _hoisted_22, [\n                _createElementVNode(\"p\", _hoisted_23, \"Skapades: \" + _toDisplayString(formatDate(post.createdAt)), 1),\n                _createElementVNode(\"p\", _hoisted_24, \"Uppdaterad: \" + _toDisplayString(formatDate(post.updatedAt)), 1)\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_25, [\n            (isLoggedIn.value)\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 0,\n                  class: _normalizeClass([\"btn\", post.userHasLiked ? 'btn-danger' : 'btn-success']),\n                  onClick: ($event: any) => (post.userHasLiked ? unlikePost(post.postId) : likePost(post.postId))\n                }, _toDisplayString(post.userHasLiked ? 'Sluta gilla' : 'Gilla'), 11, _hoisted_26))\n              : _createCommentVNode(\"\", true),\n            (isLoggedIn.value)\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 1,\n                  class: \"btn btn-primary\",\n                  onClick: ($event: any) => (openCreateReplyModal(post.postId, null))\n                }, \"Svara\", 8, _hoisted_27))\n              : _createCommentVNode(\"\", true),\n            (post.canEdit)\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 2,\n                  class: \"btn btn-warning\",\n                  onClick: ($event: any) => (openEditPostModal(post))\n                }, \"Redigera\", 8, _hoisted_28))\n              : _createCommentVNode(\"\", true),\n            (post.canEdit)\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 3,\n                  class: \"btn btn-danger\",\n                  onClick: ($event: any) => (showConfirmDeleteModal(post.postId))\n                }, \"Radera\", 8, _hoisted_29))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]),\n        (post.replies && post.replies.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [\n              _createElementVNode(\"div\", _hoisted_31, [\n                _createElementVNode(\"h2\", {\n                  class: \"accordion-header\",\n                  id: 'heading' + post.postId\n                }, [\n                  _createElementVNode(\"button\", {\n                    class: \"accordion-button collapsed\",\n                    type: \"button\",\n                    \"data-bs-toggle\": \"collapse\",\n                    \"data-bs-target\": '#collapse' + post.postId,\n                    \"aria-expanded\": \"false\",\n                    \"aria-controls\": 'collapse' + post.postId\n                  }, \" Svar \", 8, _hoisted_33)\n                ], 8, _hoisted_32),\n                _createElementVNode(\"div\", {\n                  id: 'collapse' + post.postId,\n                  class: \"accordion-collapse collapse\",\n                  \"aria-labelledby\": 'heading' + post.postId,\n                  \"data-bs-parent\": \"#accordionReplies\"\n                }, [\n                  _createElementVNode(\"div\", _hoisted_35, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(post.replies, (reply) => {\n                      return (_openBlock(), _createElementBlock(\"div\", {\n                        key: reply.replyId,\n                        class: \"reply\"\n                      }, [\n                        _createElementVNode(\"div\", _hoisted_36, [\n                          _createElementVNode(\"p\", null, [\n                            _createTextVNode(_toDisplayString(reply.content) + \" /Skrivet av:\", 1),\n                            _createElementVNode(\"em\", null, _toDisplayString(reply.author), 1)\n                          ])\n                        ]),\n                        _createElementVNode(\"p\", null, _toDisplayString(formatDate(reply.createdAt)), 1),\n                        _createElementVNode(\"p\", null, \"Gillningar: \" + _toDisplayString(reply.likes), 1),\n                        (reply.imageBase64)\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, [\n                              _createElementVNode(\"img\", {\n                                src: 'data:image/jpeg;base64,' + reply.imageBase64,\n                                alt: \"Reply Image\",\n                                class: \"img-fluid post-image\"\n                              }, null, 8, _hoisted_38)\n                            ]))\n                          : _createCommentVNode(\"\", true),\n                        (isLoggedIn.value)\n                          ? (_openBlock(), _createElementBlock(\"button\", {\n                              key: 1,\n                              class: \"btn btn-secondary\",\n                              onClick: ($event: any) => (openCreateReplyModal(post.postId, reply.replyId))\n                            }, \" Svara på detta svar \", 8, _hoisted_39))\n                          : _createCommentVNode(\"\", true),\n                        (isLoggedIn.value)\n                          ? (_openBlock(), _createElementBlock(\"button\", {\n                              key: 2,\n                              class: _normalizeClass([\"btn\", reply.userHasLiked ? 'btn-danger' : 'btn-success']),\n                              onClick: ($event: any) => (reply.userHasLiked ? unlikeReply(reply.replyId) : likeReply(reply.replyId))\n                            }, _toDisplayString(reply.userHasLiked ? 'Sluta gilla' : 'Gilla'), 11, _hoisted_40))\n                          : _createCommentVNode(\"\", true),\n                        (reply.canEdit)\n                          ? (_openBlock(), _createElementBlock(\"button\", {\n                              key: 3,\n                              class: \"btn btn-danger\",\n                              onClick: ($event: any) => (showConfirmDeleteReplyModal(reply.replyId))\n                            }, \"Radera\", 8, _hoisted_41))\n                          : _createCommentVNode(\"\", true),\n                        (reply.canEdit)\n                          ? (_openBlock(), _createElementBlock(\"button\", {\n                              key: 4,\n                              class: \"btn btn-warning\",\n                              onClick: ($event: any) => (openEditReplyModal(reply))\n                            }, \"Redigera\", 8, _hoisted_42))\n                          : _createCommentVNode(\"\", true)\n                      ]))\n                    }), 128))\n                  ])\n                ], 8, _hoisted_34)\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]))\n    }), 128)),\n    _createElementVNode(\"div\", _hoisted_43, [\n      _createElementVNode(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage.value === 1,\n        class: \"btn btn-secondary\"\n      }, \"Föregående\", 8, _hoisted_44),\n      _createElementVNode(\"span\", null, \"Sida \" + _toDisplayString(currentPage.value) + \" av \" + _toDisplayString(totalPages.value), 1),\n      _createElementVNode(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage.value === totalPages.value,\n        class: \"btn btn-secondary\"\n      }, \"Nästa\", 8, _hoisted_45)\n    ]),\n    (isEditPostModalVisible.value)\n      ? (_openBlock(), _createBlock(EditPostModal, {\n          key: 0,\n          isVisible: isEditPostModalVisible.value,\n          post: selectedPost.value,\n          onClose: closeEditPostModal,\n          onPostUpdated: fetchPosts\n        }, null, 8, [\"isVisible\", \"post\"]))\n      : _createCommentVNode(\"\", true),\n    _createVNode(CreateReplyModal, {\n      isVisible: isCreateReplyModalVisible.value,\n      postId: selectedPostId.value,\n      parentReplyId: selectedParentReplyId.value,\n      onClose: closeCreateReplyModal\n    }, null, 8, [\"isVisible\", \"postId\", \"parentReplyId\"]),\n    (isEditReplyModalVisible.value)\n      ? (_openBlock(), _createBlock(EditReplyModal, {\n          key: 1,\n          isVisible: isEditReplyModalVisible.value,\n          reply: selectedReply.value,\n          onClose: closeEditReplyModal,\n          onReplyUpdated: fetchPosts\n        }, null, 8, [\"isVisible\", \"reply\"]))\n      : _createCommentVNode(\"\", true),\n    (isConfirmDeleteModalVisible.value && selectedPostIdToDelete.value !== null)\n      ? (_openBlock(), _createBlock(ConfirmDeletePostModal, {\n          key: 2,\n          isVisible: isConfirmDeleteModalVisible.value,\n          postId: selectedPostIdToDelete.value,\n          onConfirm: fetchPosts,\n          onCancel: closeConfirmDeleteModal\n        }, null, 8, [\"isVisible\", \"postId\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","﻿\r\n<template>\r\n    <div class=\"row\">\r\n        <div class=\"d-flex justify-content-between mb-3\">\r\n            <div class=\"dropdown\">\r\n                <button class=\"btn btn-secondary dropdown-toggle\"\r\n                        type=\"button\"\r\n                        id=\"sortDropdown\"\r\n                        data-bs-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\">\r\n                    Sortera Inlägg\r\n                </button>\r\n                <ul class=\"dropdown-menu\" aria-labelledby=\"sortDropdown\">\r\n                    <!-- Dynamiskt genererade kategorier i dropdown -->\r\n                    <li v-for=\"category in categories\" :key=\"category.categoryId\">\r\n                        <a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortPostsByCategory(category.categoryId)\">\r\n                            {{ category.name }}\r\n                        </a>\r\n                    </li>\r\n                    <li><hr class=\"dropdown-divider\"></li>\r\n                    <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortPosts('likes')\">Antal Gillningar</a></li>\r\n                    <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortPosts('latest')\">Senaste Inlägg</a></li>\r\n                    <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortPosts('oldest')\">Tidigaste Inlägg</a></li>\r\n                    <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"resetPosts\">Återställ Filter</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Visa endast inlägg på den aktuella sidan -->\r\n        <div v-for=\"post in paginatedPosts\" :key=\"post.postId\" class=\"post\">\r\n            <div class=\"postborder\">\r\n                <h3 class=\"posttitle\">{{ post.title }}</h3>\r\n                <p class=\"postcontent\">{{ post.content }}</p>\r\n                <div v-if=\"post.imageBase64\">\r\n                    <img :src=\"'data:image/jpeg;base64,' + post.imageBase64\" alt=\"Post Image\" class=\"img-fluid post-image\" />\r\n                </div>\r\n                <div class=\"postcontainer\">\r\n                    <div class=\"left-section\">\r\n                        <div class=\"leftsectioncontainer\">\r\n                            <p class=\"postcategory\">Kategori: {{ post.categoryName }}</p>\r\n                            <p class=\"postauthor\">Skrivet av: {{ post.author }}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"middle-section\">\r\n                        <div class=\"middlesectioncontainer\">\r\n                            <p class=\"postlikes\">Antal gillningar: {{ post.likes }}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"right-section\">\r\n                        <div class=\"rightsectioncontainer\">\r\n                            <p class=\"postcreatedat\">Skapades: {{ formatDate(post.createdAt) }}</p>\r\n                            <p class=\"postlastupdate\">Uppdaterad: {{ formatDate(post.updatedAt) }}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"buttoncontainer\">\r\n                    <!-- Gilla-knapp -->\r\n                    <button v-if=\"isLoggedIn\" class=\"btn\"\r\n                            :class=\"post.userHasLiked ? 'btn-danger' : 'btn-success'\"\r\n                            @click=\"post.userHasLiked ? unlikePost(post.postId) : likePost(post.postId)\">\r\n                        {{ post.userHasLiked ? 'Sluta gilla' : 'Gilla' }}\r\n                    </button>\r\n                    <!-- Svara-knapp för post -->\r\n                    <button v-if=\"isLoggedIn\" class=\"btn btn-primary\" @click=\"openCreateReplyModal(post.postId, null)\">Svara</button>\r\n\r\n                    <!-- Gul redigera-knapp -->\r\n                    <button v-if=\"post.canEdit\" class=\"btn btn-warning\" @click=\"openEditPostModal(post)\">Redigera</button>\r\n\r\n                    <!-- Radera-knapp -->\r\n                    <button v-if=\"post.canEdit\" class=\"btn btn-danger\" @click=\"showConfirmDeleteModal(post.postId)\">Radera</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Accordion för att visa alla replies under posten -->\r\n            <div v-if=\"post.replies && post.replies.length > 0\" class=\"accordion\" id=\"accordionReplies\">\r\n                <div class=\"accordion-item\">\r\n                    <h2 class=\"accordion-header\" :id=\"'heading' + post.postId\">\r\n                        <button class=\"accordion-button collapsed\"\r\n                                type=\"button\"\r\n                                data-bs-toggle=\"collapse\"\r\n                                :data-bs-target=\"'#collapse' + post.postId\"\r\n                                aria-expanded=\"false\"\r\n                                :aria-controls=\"'collapse' + post.postId\">\r\n                            Svar\r\n                        </button>\r\n                    </h2>\r\n                    <div :id=\"'collapse' + post.postId\"\r\n                         class=\"accordion-collapse collapse\"\r\n                         :aria-labelledby=\"'heading' + post.postId\"\r\n                         data-bs-parent=\"#accordionReplies\">\r\n                        <div class=\"accordion-body\">\r\n                            <div v-for=\"reply in post.replies\" :key=\"reply.replyId\" class=\"reply\">\r\n                                <div class=\"replytextbox\">\r\n                                    <p>{{ reply.content }} /Skrivet av:<em>{{ reply.author }}</em></p>\r\n                                </div>\r\n                                <p>{{ formatDate(reply.createdAt) }}</p>\r\n                                <p>Gillningar: {{ reply.likes }}</p>\r\n                                <!-- Visa bilden om den finns -->\r\n                                <div v-if=\"reply.imageBase64\">\r\n                                    <img :src=\"'data:image/jpeg;base64,' + reply.imageBase64\" alt=\"Reply Image\" class=\"img-fluid post-image\" />\r\n                                </div>\r\n                                <!-- Svara-knapp för reply -->\r\n                                <button v-if=\"isLoggedIn\" class=\"btn btn-secondary\" @click=\"openCreateReplyModal(post.postId, reply.replyId)\">\r\n                                    Svara på detta svar\r\n                                </button>\r\n                                <button v-if=\"isLoggedIn\" class=\"btn\"\r\n                                        :class=\"reply.userHasLiked ? 'btn-danger' : 'btn-success'\"\r\n                                        @click=\"reply.userHasLiked ? unlikeReply(reply.replyId) : likeReply(reply.replyId)\">\r\n                                    {{ reply.userHasLiked ? 'Sluta gilla' : 'Gilla' }}\r\n                                </button>\r\n                                <!-- Redigera-knapp för reply -->\r\n                                <button v-if=\"reply.canEdit\" class=\"btn btn-danger\" @click=\"showConfirmDeleteReplyModal(reply.replyId)\">Radera</button>\r\n                                <button v-if=\"reply.canEdit\" class=\"btn btn-warning\" @click=\"openEditReplyModal(reply)\">Redigera</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Pagination controls -->\r\n        <div class=\"pagination-controls\">\r\n            <button @click=\"prevPage\" :disabled=\"currentPage === 1\" class=\"btn btn-secondary\">Föregående</button>\r\n            <span>Sida {{ currentPage }} av {{ totalPages }}</span>\r\n            <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" class=\"btn btn-secondary\">Nästa</button>\r\n        </div>\r\n\r\n        <!-- Edit Post Modal -->\r\n        <EditPostModal v-if=\"isEditPostModalVisible\"\r\n                       :isVisible=\"isEditPostModalVisible\"\r\n                       :post=\"selectedPost\"\r\n                       @close=\"closeEditPostModal\"\r\n                       @postUpdated=\"fetchPosts\" />\r\n\r\n        <!-- Modal för att skapa svar -->\r\n        <CreateReplyModal :isVisible=\"isCreateReplyModalVisible\"\r\n                          :postId=\"selectedPostId\"\r\n                          :parentReplyId=\"selectedParentReplyId\"\r\n                          @close=\"closeCreateReplyModal\" />\r\n\r\n        <!-- Edit Reply Modal -->\r\n        <EditReplyModal v-if=\"isEditReplyModalVisible\"\r\n                        :isVisible=\"isEditReplyModalVisible\"\r\n                        :reply=\"selectedReply\"\r\n                        @close=\"closeEditReplyModal\"\r\n                        @replyUpdated=\"fetchPosts\" />\r\n\r\n        <!-- Modal för att bekräfta borttagning av inlägg -->\r\n        <ConfirmDeletePostModal v-if=\"isConfirmDeleteModalVisible && selectedPostIdToDelete !== null\"\r\n                                :isVisible=\"isConfirmDeleteModalVisible\"\r\n                                :postId=\"selectedPostIdToDelete\"\r\n                                @confirm=\"fetchPosts\"\r\n                                @cancel=\"closeConfirmDeleteModal\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { ref, computed, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n    import ConfirmDeletePostModal from './ConfirmDeletePostModal.vue';\r\n    import ConfirmDeleteReplyModal from './ConfirmDeleteReplyModal.vue';\r\n    import CreateReplyModal from './CreateReplyModal.vue';\r\n    import EditPostModal from './EditPostModal.vue';\r\n    import EditReplyModal from './EditReplyModal.vue';\r\n\r\n    interface Post {\r\n        postId: number;\r\n        title: string;\r\n        content: string;\r\n        createdAt: string;\r\n        updatedAt: string;\r\n        author: string;\r\n        likes: number;\r\n        categoryId: number;\r\n        categoryName?: string;\r\n        imageBase64?: string;\r\n        replies?: Reply[];\r\n        userHasLiked: boolean;\r\n        canEdit: boolean;\r\n    }\r\n\r\n    interface Reply {\r\n        replyId: number;\r\n        content: string;\r\n        author: string;\r\n        createdAt: string;\r\n        postId: number;\r\n        likes: number;\r\n        imageBase64?: string;\r\n        userHasLiked: boolean;\r\n        canEdit: boolean;\r\n    }\r\n\r\n    interface Category {\r\n        categoryId: number;\r\n        name: string;\r\n    }\r\n\r\n    // Reaktiva variabler\r\n    const posts = ref<Post[]>([]);\r\n    const allPosts = ref<Post[]>([]); // Kopia för alla inlägg\r\n    const categories = ref<Category[]>([]);\r\n    const currentPage = ref(1);\r\n    const postsPerPage = 10;\r\n    const isLoggedIn = ref(false);\r\n\r\n    // Paginering\r\n    const totalPages = computed(() => Math.ceil(posts.value.length / postsPerPage));\r\n\r\n    const paginatedPosts = computed(() => {\r\n        const start = (currentPage.value - 1) * postsPerPage;\r\n        const end = start + postsPerPage;\r\n        return posts.value.slice(start, end);\r\n    });\r\n\r\n    const formatDate = (dateString: string) => dateString.split('T')[0];\r\n\r\n    // Modal- och likes-relaterade variabler och funktioner\r\n    const isConfirmDeleteModalVisible = ref(false);\r\n    const isConfirmDeleteReplyModalVisible = ref(false);\r\n    const isCreateReplyModalVisible = ref(false);\r\n    const selectedPostIdToDelete = ref<number | null>(null);\r\n    const selectedReplyIdToDelete = ref<number | null>(null);\r\n    const selectedPostId = ref<number | null>(null);\r\n    const selectedParentReplyId = ref<number | null>(null);\r\n    const isEditPostModalVisible = ref(false);\r\n    const selectedPost = ref<Post | null>(null);\r\n    const isEditReplyModalVisible = ref(false);\r\n    const selectedReply = ref<Reply | null>(null);\r\n\r\n    // Kontrollera om användaren är inloggad genom att kontrollera om JWT-token finns i localStorage\r\n    const checkLoginStatus = () => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        isLoggedIn.value = !!token;  // Sätt true om token finns, annars false\r\n    };\r\n\r\n\r\n    // Funktion för att öppna EditPostModal\r\n    const openEditPostModal = (post: Post) => {\r\n        selectedPost.value = post;\r\n        isEditPostModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga EditPostModal\r\n    const closeEditPostModal = () => {\r\n        isEditPostModalVisible.value = false;\r\n    };\r\n\r\n    // Funktion för att öppna CreateReplyModal\r\n    const openCreateReplyModal = (postId: number, parentReplyId: number | null) => {\r\n        selectedPostId.value = postId;\r\n        selectedParentReplyId.value = parentReplyId;\r\n        isCreateReplyModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga CreateReplyModal\r\n    const closeCreateReplyModal = () => {\r\n        isCreateReplyModalVisible.value = false;\r\n        selectedPostId.value = null;\r\n        selectedParentReplyId.value = null;\r\n    };\r\n\r\n    // Funktion för att öppna EditReplyModal\r\n    const openEditReplyModal = (reply: Reply) => {\r\n        selectedReply.value = reply;\r\n        isEditReplyModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga EditReplyModal\r\n    const closeEditReplyModal = () => {\r\n        isEditReplyModalVisible.value = false;\r\n    };\r\n\r\n    // Funktion för att öppna borttagningsmodalen för inlägg\r\n    const showConfirmDeleteModal = (postId: number) => {\r\n        selectedPostIdToDelete.value = postId;\r\n        isConfirmDeleteModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga borttagningsmodalen för inlägg\r\n    const closeConfirmDeleteModal = () => {\r\n        isConfirmDeleteModalVisible.value = false;\r\n        selectedPostIdToDelete.value = null;\r\n    };\r\n\r\n    // Funktion för att öppna borttagningsmodalen för svar\r\n    const showConfirmDeleteReplyModal = (replyId: number) => {\r\n        selectedReplyIdToDelete.value = replyId;\r\n        isConfirmDeleteReplyModalVisible.value = true;\r\n    };\r\n\r\n    // Funktion för att stänga borttagningsmodalen för svar\r\n    const closeConfirmDeleteReplyModal = () => {\r\n        isConfirmDeleteReplyModalVisible.value = false;\r\n        selectedReplyIdToDelete.value = null;\r\n    };\r\n\r\n    // Paginering\r\n    const prevPage = () => {\r\n        if (currentPage.value > 1) {\r\n            currentPage.value--;\r\n        }\r\n    };\r\n\r\n    const nextPage = () => {\r\n        if (currentPage.value < totalPages.value) {\r\n            currentPage.value++;\r\n        }\r\n    };\r\n\r\n    // Funktion för att hämta alla inlägg\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const response = await axios.get<Post[]>('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post');\r\n            const postsWithReplies = await Promise.all(\r\n                response.data.map(async (post) => {\r\n                    const replies = await fetchRepliesForPost(post.postId);\r\n                    const category = categories.value.find(cat => cat.categoryId === post.categoryId);\r\n                    const userHasLiked = await HasUserLikedPost(post.postId);\r\n\r\n                    // Kontrollera om användaren kan redigera/radera posten\r\n                    const canEdit = await checkEditPermissions(post.postId);\r\n\r\n                    return {\r\n                        ...post,\r\n                        replies,\r\n                        categoryName: category ? category.name : 'Okänd kategori',\r\n                        imageBase64: post.imageBase64,\r\n                        userHasLiked,\r\n                        canEdit,\r\n                    };\r\n                })\r\n            );\r\n            posts.value = postsWithReplies;\r\n            allPosts.value = postsWithReplies;\r\n        } catch (error) {\r\n            console.error('Fel vid hämtning av inlägg:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // Hämta replies för ett inlägg\r\n    const fetchRepliesForPost = async (postId: number) => {\r\n        try {\r\n            const response = await axios.get<Reply[]>(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/post/${postId}`);\r\n            const repliesWithAdditionalInfo = await Promise.all(\r\n                response.data.map(async (reply) => {\r\n                    const userHasLiked = await HasUserLikedReply(reply.replyId);\r\n                    const canEdit = await checkEditPermissionsForReply(reply.replyId);\r\n\r\n                    return {\r\n                        ...reply,\r\n                        imageBase64: reply.imageBase64 || null,\r\n                        userHasLiked,\r\n                        canEdit,\r\n                    };\r\n                })\r\n            );\r\n            return repliesWithAdditionalInfo;\r\n        } catch (error: any) {\r\n            if (error.response && error.response.status === 404) {\r\n                console.info(`Inga replies hittades för postId: ${postId}.`);\r\n                return [];  // Returnera en tom array om inga replies hittas\r\n            } else {\r\n                console.error('Fel vid hämtning av replies:', error);\r\n                return [];\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    // Funktion för att hämta kategorier\r\n    const fetchCategories = async () => {\r\n        try {\r\n            const response = await axios.get<Category[]>('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Category');\r\n            categories.value = response.data;\r\n        } catch (error) {\r\n            console.error('Fel vid hämtning av kategorier:', error);\r\n        }\r\n    };\r\n\r\n    // Sortera inlägg\r\n    const sortPosts = (sortBy: string) => {\r\n        posts.value = [...allPosts.value];\r\n        switch (sortBy) {\r\n            case 'likes':\r\n                posts.value.sort((a, b) => b.likes - a.likes);\r\n                break;\r\n            case 'latest':\r\n                posts.value.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\r\n                break;\r\n            case 'oldest':\r\n                posts.value.sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\r\n                break;\r\n        }\r\n        currentPage.value = 1;\r\n    };\r\n\r\n    const likePost = async (postId: number) => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n\r\n            // Kontrollera att token existerar\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            // Anropa backend-API för att gilla posten med Bearer-token (JWT)\r\n            const response = await axios.post(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${postId}/like`,\r\n                {}, // Tom body för POST-förfrågan\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}` // Skicka JWT-token i Authorization-headern\r\n                    }\r\n                }\r\n            );\r\n\r\n            const message = response.data.message;\r\n\r\n            // Uppdatera lokalt antal likes och userHasLiked om anropet lyckas\r\n            const post = posts.value.find(p => p.postId === postId);\r\n            if (post) {\r\n                post.likes += 1;\r\n                post.userHasLiked = true;  // Uppdatera flaggan direkt för att reflektera att användaren har gillat\r\n            }\r\n\r\n        } catch (error: any) {\r\n            if (error.response && error.response.data.message) {\r\n                // Specifika felmeddelanden från API:t\r\n                console.error(error.response.data.message);\r\n            } else {\r\n                // Annat fel (nätverksproblem eller oväntat problem)\r\n                console.error('Ett fel uppstod vid gillningen:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const likeReply = async (replyId: number) => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n\r\n            // Kontrollera att token existerar\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            // Anropa backend-API för att gilla reply med Bearer-token (JWT)\r\n            const response = await axios.post(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${replyId}/like`,\r\n                {}, // Tom body för POST-förfrågan\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}` // Skicka JWT-token i Authorization-headern\r\n                    }\r\n                }\r\n            );\r\n\r\n            const message = response.data.message;\r\n\r\n            // Uppdatera lokalt antal likes och userHasLiked om anropet lyckas\r\n            for (const post of posts.value) {\r\n                const reply = post.replies?.find(r => r.replyId === replyId);\r\n                if (reply) {\r\n                    reply.likes += 1;\r\n                    reply.userHasLiked = true;  // Uppdatera flaggan direkt för att reflektera att användaren har gillat\r\n                    break; // Avbryt loopen när vi har hittat och uppdaterat rätt reply\r\n                }\r\n            }\r\n\r\n        } catch (error: any) {\r\n            if (error.response && error.response.data.message) {\r\n                // Specifika felmeddelanden från API:t\r\n                console.error(error.response.data.message);\r\n            } else {\r\n                // Annat fel (nätverksproblem eller oväntat problem)\r\n                console.error('Ett fel uppstod vid gillningen av reply:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const unlikePost = async (postId: number) => {\r\n        try {\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            const response = await axios.post(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${postId}/unlike`,  // Endpoint för att sluta gilla\r\n                {},\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`, // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            const post = posts.value.find(p => p.postId === postId);\r\n            if (post) {\r\n                post.likes -= 1;  // Minska likes lokalt\r\n                post.userHasLiked = false;  // Markera att användaren inte längre har gillat posten\r\n            }\r\n\r\n        } catch (error: any) {\r\n            console.error('Fel vid att sluta gilla posten:', error);\r\n        }\r\n    };\r\n\r\n    const HasUserLikedPost = async (postId: number): Promise<boolean> => {\r\n        try {\r\n            // Hämta JWT-token från localStorage\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.warn('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n                return false;  // Användaren är inte inloggad, returnera false\r\n            }\r\n\r\n            // Anropa backend för att kontrollera om användaren har gillat posten\r\n            const response = await axios.get<boolean>(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${postId}/hasLiked`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            return response.data;  // Returnera true eller false baserat på backend-svaret\r\n\r\n        } catch (error: any) {\r\n            // Om det är en 401 Unauthorized, logga ett specifikt meddelande\r\n            if (error.response && error.response.status === 401) {\r\n                console.warn('Användaren är inte auktoriserad eller token har löpt ut.');\r\n            } else {\r\n                console.error('Fel vid kontroll av om användaren har gillat posten:', error);\r\n            }\r\n\r\n            return false;  // Vid fel, returnera false som standard\r\n        }\r\n    };\r\n\r\n\r\n    const unlikeReply = async (replyId: number) => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n\r\n            if (!token) {\r\n                throw new Error('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n            }\r\n\r\n            // Optimistisk uppdatering - hitta rätt post och reply\r\n            for (const post of posts.value) {\r\n                const reply = post.replies?.find(r => r.replyId === replyId);\r\n                if (reply) {\r\n                    // Minska likes lokalt och markera reply som \"ogillad\"\r\n                    reply.likes -= 1;\r\n                    reply.userHasLiked = false;\r\n\r\n                    // Anropa backend för att sluta gilla reply\r\n                    const response = await axios.post(\r\n                        `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${replyId}/unlike`,\r\n                        {},\r\n                        {\r\n                            headers: {\r\n                                Authorization: `Bearer ${token}`, // Skicka JWT-token i Authorization-headern\r\n                            },\r\n                        }\r\n                    );\r\n\r\n                    break; // Avbryt loopen när rätt reply har uppdaterats\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Fel vid att sluta gilla replyn:', error);\r\n        }\r\n    };\r\n\r\n    const HasUserLikedReply = async (replyId: number): Promise<boolean> => {\r\n        try {\r\n            // Hämta JWT-token från localStorage (justera detta baserat på var du lagrar token)\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.warn('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n                return false; // Användaren är inte inloggad, returnera false\r\n            }\r\n\r\n            // Anropa backend för att kontrollera om användaren har gillat reply\r\n            const response = await axios.get<boolean>(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${replyId}/hasLiked`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            return response.data;  // Returnera true eller false baserat på backend-svaret\r\n\r\n        } catch (error: any) {\r\n            // Om det är en 401 Unauthorized, logga ett specifikt meddelande\r\n            if (error.response && error.response.status === 401) {\r\n                console.warn('Användaren är inte auktoriserad eller token har löpt ut.');\r\n            } else {\r\n                console.error('Fel vid kontroll av om användaren har gillat replyn:', error);\r\n            }\r\n\r\n            return false;  // Vid fel, returnera false som standard\r\n        }\r\n    };\r\n\r\n\r\n    const checkEditPermissions = async (postId: number): Promise<boolean> => {\r\n        try {\r\n            // Hämta JWT-token från localStorage\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.warn('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n                return false;  // Användaren är inte inloggad, returnera false\r\n            }\r\n\r\n            // Anropa backend för att kontrollera redigeringsbehörighet\r\n            const response = await axios.get(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post/${postId}/can-edit`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            return response.data.canEdit;  // Returnera true eller false baserat på backend-svaret\r\n\r\n        } catch (error: any) {\r\n            // Om det är en 401 Unauthorized, logga ett specifikt meddelande\r\n            if (error.response && error.response.status === 401) {\r\n                console.warn('Användaren är inte auktoriserad eller token har löpt ut.');\r\n            } else {\r\n                console.error('Fel vid kontroll av redigeringsbehörighet:', error);\r\n            }\r\n\r\n            return false;  // Vid fel, returnera false som standard\r\n        }\r\n    };\r\n\r\n\r\n    const checkEditPermissionsForReply = async (replyId: number): Promise<boolean> => {\r\n        try {\r\n            // Hämta JWT-token från localStorage\r\n            const token = localStorage.getItem('jwtToken');\r\n            if (!token) {\r\n                console.warn('Ingen JWT-token tillgänglig, användaren är inte inloggad.');\r\n                return false;  // Användaren är inte inloggad, returnera false\r\n            }\r\n\r\n            // Anropa backend för att kontrollera redigeringsbehörighet\r\n            const response = await axios.get(\r\n                `https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Replies/${replyId}/can-edit`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,  // Skicka JWT-token i Authorization-headern\r\n                    },\r\n                }\r\n            );\r\n\r\n            return response.data.canEdit;  // Returnera true eller false baserat på backend-svaret\r\n\r\n        } catch (error: any) {\r\n            // Om det är en 401 Unauthorized, logga ett specifikt meddelande\r\n            if (error.response && error.response.status === 401) {\r\n                console.warn('Användaren är inte auktoriserad eller token har löpt ut.');\r\n            } else {\r\n                console.error('Fel vid kontroll av redigeringsbehörighet för reply:', error);\r\n            }\r\n\r\n            return false;  // Vid fel, returnera false som standard\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // Sortera efter kategori\r\n    const sortPostsByCategory = (categoryId: number) => {\r\n        posts.value = allPosts.value.filter(post => post.categoryId === categoryId);\r\n        currentPage.value = 1;\r\n    };\r\n\r\n    // Återställ inlägg\r\n    const resetPosts = () => {\r\n        posts.value = [...allPosts.value];\r\n        currentPage.value = 1;\r\n    };\r\n\r\n    // Lifecycle hook för att hämta data\r\n    onMounted(async () => {\r\n        await fetchCategories();\r\n        await fetchPosts();\r\n        checkLoginStatus();\r\n    });\r\n</script>\r\n\r\n<style scoped>\r\n    .pagination-controls {\r\n        margin-top: 20px;\r\n        text-align: center;\r\n    }\r\n\r\n    .post-image {\r\n        max-width: 300px; /* Maximal bredd */\r\n        max-height: 300px; /* Maximal höjd */\r\n        object-fit: contain; /* Behåll bildens proportioner */\r\n    }\r\n\r\n\r\n    .post, .reply {\r\n        border: 1px solid #ddd;\r\n        border-radius: 0.375rem;\r\n        padding: 1rem;\r\n        margin-bottom: 1rem;\r\n        background-color: #fff;\r\n    }\r\n    /*Text inside posts*/\r\n\r\n    .postcontainer {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: flex-start;\r\n        height: auto;\r\n        padding: 0.5rem;\r\n        max-height: 4rem;\r\n        border: 1px solid black;\r\n    }\r\n\r\n\r\n\r\n        .postcontainer > div {\r\n            display: flex;\r\n            flex-direction: column;\r\n        }\r\n\r\n    .leftsectioncontainer {\r\n        padding: 0.20rem;\r\n    }\r\n\r\n    .left-section {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 0.5rem;\r\n    }\r\n\r\n    .middlesectioncontainer {\r\n        padding: 0.20rem;\r\n    }\r\n\r\n    .middle-section {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 0.5rem;\r\n    }\r\n\r\n    .rightsectioncontainer {\r\n        padding: 0.20rem;\r\n    }\r\n\r\n    .right-section {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 0.5rem;\r\n    }\r\n\r\n    .replytextbox {\r\n        border: 1px solid black;\r\n        border-radius: 10px;\r\n    }\r\n    /* Reset margins for items */\r\n    .postcategory, .postcreatedat, .postlastupdate, .postauthor {\r\n        margin: 0;\r\n    }\r\n\r\n    .posttitle {\r\n        background-color: #6ECB63;\r\n        font-weight: bold;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .postcontent {\r\n        margin-top: 1rem;\r\n        border: 1px solid black;\r\n        border-radius: 5px;\r\n    }\r\n\r\n\r\n\r\n    /* Button Styles */\r\n\r\n    .buttoncontainer {\r\n        margin-bottom: 10px;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        padding: 1rem;\r\n    }\r\n\r\n    .btnlike {\r\n        background-color: #6ECB63;\r\n        color: black;\r\n        border: 1px solid transparent;\r\n        align-content: flex-start;\r\n    }\r\n\r\n        .btnlike:hover {\r\n            background-color: #218838;\r\n            border-color: #1e7e34;\r\n            color: black;\r\n        }\r\n\r\n    .btnanswer {\r\n        background-color: #6ECB63;\r\n        color: black;\r\n        border: 1px solid transparent;\r\n        align-content: flex-start;\r\n    }\r\n\r\n        .btnanswer:hover {\r\n            background-color: #218838;\r\n            border-color: #1e7e34;\r\n            color: black;\r\n        }\r\n\r\n    .btn {\r\n        margin-right: 0.5rem;\r\n    }\r\n\r\n    /* Sorting Dropdown */\r\n    .dropdown-menu {\r\n        min-width: 200px;\r\n    }\r\n\r\n    .dropdown-item {\r\n        padding: 0.5rem 1rem;\r\n    }\r\n\r\n    /* Accordion Styles */\r\n    .accordion-button {\r\n        border-radius: 0.375rem;\r\n    }\r\n\r\n    .accordion-body {\r\n        padding: 1rem;\r\n    }\r\n\r\n    /* Pagination Controls */\r\n    .pagination-controls {\r\n        margin-top: 1rem;\r\n        text-align: center;\r\n    }\r\n\r\n        .pagination-controls .btn {\r\n            margin: 0 0.5rem;\r\n        }\r\n\r\n    /* Modal Styles */\r\n    .modal-dialog {\r\n        max-width: 90%;\r\n    }\r\n\r\n    .modal-content {\r\n        border-radius: 0.375rem;\r\n    }\r\n\r\n</style>\r\n","import script from \"./PostList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PostList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./PostList.vue?vue&type=style&index=0&id=0d7eaeb0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0d7eaeb0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-fe55df20\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal show\",\n  style: {\"display\":\"block\"}\n}\nconst _hoisted_2 = { class: \"modal-dialog\" }\nconst _hoisted_3 = { class: \"modal-content\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modal-title\" }, \"Skapa nytt inlägg\", -1))\nconst _hoisted_5 = { class: \"modal-body\" }\nconst _hoisted_6 = { class: \"mb-3\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\",\n  class: \"form-label\"\n}, \"Titel\", -1))\nconst _hoisted_8 = { class: \"mb-3\" }\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\",\n  class: \"form-label\"\n}, \"Innehåll\", -1))\nconst _hoisted_10 = { class: \"mb-3\" }\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"category\",\n  class: \"form-label\"\n}, \"Kategori\", -1))\nconst _hoisted_12 = [\"value\"]\nconst _hoisted_13 = { class: \"mb-3\" }\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"image\",\n  class: \"form-label\"\n}, \"Lägg till bild\", -1))\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Spara\", -1))\n\nimport { ref, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Props för modalen\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CreatePostModal',\n  props: {\r\n        isVisible: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n    },\n  emits: ['close', 'postCreated'],\n  setup(__props, { emit: __emit }) {\n\r\n    const props = __props;\r\n\r\n    // Emit för att stänga modalen och uppdatera inlägg\r\n    const emit = __emit;\r\n\r\n    // Reaktiva data\r\n    const title = ref('');\r\n    const content = ref('');\r\n    const selectedCategory = ref('');  // Kategorin som användaren väljer\r\n    const categories = ref([]);  // Alla kategorier\r\n    const image = ref<File | null>(null); // För att hålla den valda bilden\r\n\r\n// Funktion för att hantera när en fil väljs i bilduppladdningen\r\nconst handleImageUpload = (event: Event) => {\r\n    const file = (event.target as HTMLInputElement).files?.[0];\r\n    if (file) {\r\n        image.value = file; // Spara den valda filen i image ref\r\n    }\r\n};\r\n\r\n    // Funktion för att stänga modalen\r\n    const closeModal = () => {\r\n        emit('close');\r\n    };\r\n\r\n    // Funktion för att hämta alla kategorier från API\r\n   const fetchCategories = async () => {\r\n    try {\r\n        const response = await axios.get('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Category');  // Din API-endpoint\r\n        categories.value = response.data;\r\n    } catch (error) {\r\n        console.error('Fel vid hämtning av kategorier:', error);\r\n    }\r\n};\r\n\r\n\r\n    // Hämta kategorier när komponenten monteras\r\n    onMounted(() => {\r\n        fetchCategories();\r\n    });\r\n\r\n    // Funktion för att hantera formulärinlämning och skapa ett nytt inlägg\r\nconst submitForm = async () => {\r\n    try {\r\n        \r\n        const formData = new FormData();\r\n        formData.append('title', title.value);\r\n        formData.append('content', content.value);\r\n        formData.append('categoryId', String(selectedCategory.value));  // Konvertera till sträng om det är ett nummer\r\n\r\n        if (image.value) {\r\n            formData.append('image', image.value);\r\n        }\r\n        const token = localStorage.getItem('jwtToken');\n        // Kontrollera om token finns\n        if (!token) {\n            console.error('Ingen JWT-token hittades i localStorage.');\n            return;\n        }\r\n        await axios.post('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        });\r\n\r\n        emit('postCreated');\r\n\r\n        title.value = '';\r\n        content.value = '';\r\n        selectedCategory.value = '';\r\n        image.value = null;\r\n        closeModal();\r\n    } catch (error) {\r\n        console.error('Ett fel uppstod vid skapandet av inlägget:', error);\r\n    }\r\n};\r\n\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (__props.isVisible)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"div\", { class: \"modal-header\" }, [\n              _hoisted_4,\n              _createElementVNode(\"button\", {\n                type: \"button\",\n                class: \"btn-close\",\n                onClick: closeModal\n              })\n            ]),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createElementVNode(\"form\", {\n                onSubmit: _withModifiers(submitForm, [\"prevent\"])\n              }, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _hoisted_7,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"text\",\n                    id: \"title\",\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((title).value = $event)),\n                    class: \"form-control\",\n                    required: \"\"\n                  }, null, 512), [\n                    [_vModelText, title.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _hoisted_9,\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    id: \"content\",\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((content).value = $event)),\n                    class: \"form-control\",\n                    required: \"\"\n                  }, null, 512), [\n                    [_vModelText, content.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _hoisted_11,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    id: \"category\",\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((selectedCategory).value = $event)),\n                    class: \"form-select\",\n                    required: \"\"\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(categories.value, (category) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: category.categoryId,\n                        value: category.categoryId\n                      }, _toDisplayString(category.name), 9, _hoisted_12))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, selectedCategory.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_13, [\n                  _hoisted_14,\n                  _createElementVNode(\"input\", {\n                    type: \"file\",\n                    id: \"image\",\n                    onChange: handleImageUpload,\n                    class: \"form-control\"\n                  }, null, 32)\n                ]),\n                _hoisted_15\n              ], 32)\n            ])\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n    <!-- Modalen visas endast när `isVisible` är sant -->\r\n    <div v-if=\"isVisible\" class=\"modal show\" style=\"display: block;\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Skapa nytt inlägg</h5>\r\n                    <!-- När man klickar på knappen, emit 'close' eventet för att stänga modalen -->\r\n                    <button type=\"button\" class=\"btn-close\" @click=\"closeModal\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form @submit.prevent=\"submitForm\">\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"title\" class=\"form-label\">Titel</label>\r\n                            <input type=\"text\" id=\"title\" v-model=\"title\" class=\"form-control\" required />\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"content\" class=\"form-label\">Innehåll</label>\r\n                            <textarea id=\"content\" v-model=\"content\" class=\"form-control\" required></textarea>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"category\" class=\"form-label\">Kategori</label>\r\n                            <!-- Dropdown-lista för att välja kategori -->\r\n                            <select id=\"category\" v-model=\"selectedCategory\" class=\"form-select\" required>\r\n                                <option v-for=\"category in categories\" :key=\"category.categoryId\" :value=\"category.categoryId\">\r\n                                    {{ category.name }}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <!-- Nytt bilduppladdningsfält -->\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"image\" class=\"form-label\">Lägg till bild</label>\r\n                            <input type=\"file\" id=\"image\" @change=\"handleImageUpload\" class=\"form-control\" />\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Spara</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\n    import { ref, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Props för modalen\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n    });\r\n\r\n    // Emit för att stänga modalen och uppdatera inlägg\r\n    const emit = defineEmits(['close', 'postCreated']);\r\n\r\n    // Reaktiva data\r\n    const title = ref('');\r\n    const content = ref('');\r\n    const selectedCategory = ref('');  // Kategorin som användaren väljer\r\n    const categories = ref([]);  // Alla kategorier\r\n    const image = ref<File | null>(null); // För att hålla den valda bilden\r\n\r\n// Funktion för att hantera när en fil väljs i bilduppladdningen\r\nconst handleImageUpload = (event: Event) => {\r\n    const file = (event.target as HTMLInputElement).files?.[0];\r\n    if (file) {\r\n        image.value = file; // Spara den valda filen i image ref\r\n    }\r\n};\r\n\r\n    // Funktion för att stänga modalen\r\n    const closeModal = () => {\r\n        emit('close');\r\n    };\r\n\r\n    // Funktion för att hämta alla kategorier från API\r\n   const fetchCategories = async () => {\r\n    try {\r\n        const response = await axios.get('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Category');  // Din API-endpoint\r\n        categories.value = response.data;\r\n    } catch (error) {\r\n        console.error('Fel vid hämtning av kategorier:', error);\r\n    }\r\n};\r\n\r\n\r\n    // Hämta kategorier när komponenten monteras\r\n    onMounted(() => {\r\n        fetchCategories();\r\n    });\r\n\r\n    // Funktion för att hantera formulärinlämning och skapa ett nytt inlägg\r\nconst submitForm = async () => {\r\n    try {\r\n        \r\n        const formData = new FormData();\r\n        formData.append('title', title.value);\r\n        formData.append('content', content.value);\r\n        formData.append('categoryId', String(selectedCategory.value));  // Konvertera till sträng om det är ett nummer\r\n\r\n        if (image.value) {\r\n            formData.append('image', image.value);\r\n        }\r\n        const token = localStorage.getItem('jwtToken');\n        // Kontrollera om token finns\n        if (!token) {\n            console.error('Ingen JWT-token hittades i localStorage.');\n            return;\n        }\r\n        await axios.post('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        });\r\n\r\n        emit('postCreated');\r\n\r\n        title.value = '';\r\n        content.value = '';\r\n        selectedCategory.value = '';\r\n        image.value = null;\r\n        closeModal();\r\n    } catch (error) {\r\n        console.error('Ett fel uppstod vid skapandet av inlägget:', error);\r\n    }\r\n};\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .modal {\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n    }\r\n</style>\r\n","import script from \"./CreatePostModal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CreatePostModal.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./CreatePostModal.vue?vue&type=style&index=0&id=fe55df20&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fe55df20\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"home\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"text-center\" }, \"Forum\", -1)\nconst _hoisted_3 = { class: \"container\" }\n\nimport { ref, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n    import PostList from '../components/PostList.vue';\r\n    import CreatePostModal from '../components/CreatePostModal.vue';\r\n\r\n    // Typdefinition för en Post\r\n    interface Post {\r\n        id: number;\r\n        title: string;\r\n        content: string;\r\n    }\r\n\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ForumView',\n  setup(__props) {\n\r\n    const posts = ref<Post[]>([]);\r\n    const isCreatePostModalVisible = ref(false);\r\n    const isLoggedIn = ref(false);\n\r\n    // Kontrollera om användaren är inloggad genom att kontrollera om JWT-token finns i localStorage\n    const checkLoginStatus = () => {\n        const token = localStorage.getItem('jwtToken');\n        isLoggedIn.value = !!token;  // Sätt true om token finns, annars false\n    };\r\n\r\n\r\n    // Hämtar inlägg från API\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const response = await axios.get('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post');\r\n            posts.value = response.data;\r\n        } catch (error) {\r\n            console.error('Fel vid hämtning av inlägg:', error);\r\n        }\r\n    };\r\n\r\n    // Öppnar modalen för att skapa inlägg\r\n    const openCreatePostModal = () => {\r\n        isCreatePostModalVisible.value = true;\r\n    };\r\n\r\n    // Stänger modalen för att skapa inlägg\r\n    const closeCreatePostModal = () => {\r\n        isCreatePostModalVisible.value = false;\r\n    };\r\n\r\n    // Körs när komponenten monteras\r\n    onMounted(() => {\r\n        fetchPosts();\r\n        checkLoginStatus(); \r\n    });\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      (isLoggedIn.value)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            class: \"btn btn-primary me-1\",\n            onClick: openCreatePostModal\n          }, \"Skapa inlägg\"))\n        : _createCommentVNode(\"\", true),\n      _createVNode(CreatePostModal, {\n        isVisible: isCreatePostModalVisible.value,\n        onClose: closeCreatePostModal,\n        onPostCreated: fetchPosts\n      }, null, 8, [\"isVisible\"]),\n      _createVNode(PostList, { posts: posts.value }, null, 8, [\"posts\"])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n    <div class=\"home\">\r\n        <h1 class=\"text-center\">Forum</h1>\r\n        <div class=\"container\">\r\n            <!-- Knappen som öppnar modalen -->\r\n            <button v-if=\"isLoggedIn\" class=\"btn btn-primary me-1\" @click=\"openCreatePostModal\">Skapa inlägg</button>\r\n\r\n            <!-- Modalen styrs av isCreatePostModalVisible och lyssnar på close-eventet -->\r\n            <CreatePostModal :isVisible=\"isCreatePostModalVisible\" @close=\"closeCreatePostModal\" @postCreated=\"fetchPosts\" />\r\n\r\n            <!-- Lista över inlägg -->\r\n            <PostList :posts=\"posts\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { ref, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n    import PostList from '../components/PostList.vue';\r\n    import CreatePostModal from '../components/CreatePostModal.vue';\r\n\r\n    // Typdefinition för en Post\r\n    interface Post {\r\n        id: number;\r\n        title: string;\r\n        content: string;\r\n    }\r\n\r\n    const posts = ref<Post[]>([]);\r\n    const isCreatePostModalVisible = ref(false);\r\n    const isLoggedIn = ref(false);\n\r\n    // Kontrollera om användaren är inloggad genom att kontrollera om JWT-token finns i localStorage\n    const checkLoginStatus = () => {\n        const token = localStorage.getItem('jwtToken');\n        isLoggedIn.value = !!token;  // Sätt true om token finns, annars false\n    };\r\n\r\n\r\n    // Hämtar inlägg från API\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const response = await axios.get('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Post');\r\n            posts.value = response.data;\r\n        } catch (error) {\r\n            console.error('Fel vid hämtning av inlägg:', error);\r\n        }\r\n    };\r\n\r\n    // Öppnar modalen för att skapa inlägg\r\n    const openCreatePostModal = () => {\r\n        isCreatePostModalVisible.value = true;\r\n    };\r\n\r\n    // Stänger modalen för att skapa inlägg\r\n    const closeCreatePostModal = () => {\r\n        isCreatePostModalVisible.value = false;\r\n    };\r\n\r\n    // Körs när komponenten monteras\r\n    onMounted(() => {\r\n        fetchPosts();\r\n        checkLoginStatus(); \r\n    });\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./ForumView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ForumView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-76879689\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"col-md-12\" }\nconst _hoisted_2 = { class: \"card card-container\" }\nconst _hoisted_3 = { class: \"form-group\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"username\" }, \"Användarnamn\", -1))\nconst _hoisted_5 = { class: \"form-group\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"password\" }, \"Lösenord\", -1))\nconst _hoisted_7 = { class: \"form-group\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = { class: \"spinner-border spinner-border-sm\" }\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Logga in\", -1))\nconst _hoisted_11 = { class: \"form-group\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"alert alert-danger\",\n  role: \"alert\"\n}\nconst _hoisted_13 = { key: 1 }\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Du är inloggad\", -1))\nconst _hoisted_15 = {\n  key: 0,\n  class: \"text-success\"\n}\n\nimport { ref, computed, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n    import { Form, Field, ErrorMessage } from 'vee-validate';\r\n    import * as yup from 'yup';\r\n\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Login',\n  setup(__props) {\n\r\n    const userCredentials = ref({\r\n        username: '',\r\n        password: '',\r\n    });\r\n\r\n    const loading = ref(false);\r\n    const errorMessage = ref('');\r\n    const loggedOut = ref(false);\r\n    const isLoggedIn = ref(false);  // Reaktiv variabel för inloggningsstatus\r\n\r\n    const schema = yup.object().shape({\r\n        username: yup.string().required('Användarnamn krävs'),\r\n        password: yup.string().required('Lösenord krävs'),\r\n    });\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            loading.value = true;\r\n            errorMessage.value = '';\r\n\r\n            const loginResponse = await axios.post('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/auth/login', userCredentials.value);\r\n\r\n            if (loginResponse.status === 200) {\r\n                const token = loginResponse.data.token;\r\n                localStorage.setItem('jwtToken', token);\r\n\r\n                const username = userCredentials.value.username;\r\n                const userIdResponse = await axios.get(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/users/id?username=${username}`);\r\n\r\n                if (userIdResponse.status === 200) {\r\n                    const userId = userIdResponse.data;\r\n                    localStorage.setItem('userId', userId);\r\n                }\r\n\r\n                window.location.reload();\r\n            } else {\r\n                throw new Error('Inloggning misslyckades');\r\n            }\r\n        } catch (error) {\r\n            errorMessage.value = 'Fel vid inloggning. Kontrollera dina inloggningsuppgifter och försök igen.';\r\n        } finally {\r\n            loading.value = false;\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        // Ta bort både JWT-token och userId från localStorage för att logga ut användaren\r\n        localStorage.removeItem('jwtToken');\r\n        localStorage.removeItem('userId');\r\n        loggedOut.value = true;\r\n        userCredentials.value = {\r\n            username: '',\r\n            password: '',\r\n        };\r\n        window.location.reload();\r\n    };\r\n\r\n    // Funktion för att extrahera expiration-time från JWT-token\r\n    const getTokenExpiration = (token: string) => {\r\n        const payloadBase64 = token.split('.')[1];\r\n        const decodedPayload = JSON.parse(atob(payloadBase64));\r\n        return decodedPayload.exp * 1000; // Konvertera till millisekunder\r\n    };\r\n\r\n    // Funktion för att kontrollera och logga ut användaren när token har gått ut\r\n    const handleTokenExpiration = () => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        if (token) {\r\n            const expirationTime = getTokenExpiration(token);\r\n            const currentTime = Date.now();\r\n\r\n            if (currentTime >= expirationTime) {\r\n                handleLogout(); // Token har gått ut, logga ut användaren\r\n            } else {\r\n                const timeUntilExpiration = expirationTime - currentTime;\r\n                setTimeout(handleLogout, timeUntilExpiration); // Logga ut användaren när tiden har gått ut\r\n            }\r\n        }\r\n    };\r\n\r\n    // Funktion för att logga ut användaren efter 30 minuter\r\n    const setAutoLogoutTimer = () => {\r\n        const thirtyMinutes = 1800000; // 30 minuter i millisekunder\r\n        setTimeout(handleLogout, thirtyMinutes); // Logga ut användaren efter 30 minuter\r\n    };\r\n\r\n    // Funktion för att kontrollera inloggningsstatus baserat på om både JWT-token och userId finns i localStorage\r\n    const checkLoginStatus = () => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        const userId = localStorage.getItem('userId');\r\n        isLoggedIn.value = !!token && !!userId; // Sätter isLoggedIn till true om båda finns, annars false\r\n    };\r\n\r\n    // Kontrollera inloggningsstatus när sidan laddas\r\n    onMounted(() => {\r\n        checkLoginStatus(); // Kontrollera om användaren är inloggad\r\n        handleTokenExpiration(); // Kontrollera om JWT-token har gått ut och sätt timer\r\n        setAutoLogoutTimer(); // Sätt en timer för automatisk utloggning efter 30 minuter\r\n    });\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (!isLoggedIn.value)\n        ? (_openBlock(), _createBlock(_unref(Form), {\n            key: 0,\n            onSubmit: handleLogin,\n            \"validation-schema\": _unref(schema)\n          }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"div\", _hoisted_3, [\n                _hoisted_4,\n                _createVNode(_unref(Field), {\n                  name: \"username\",\n                  modelValue: userCredentials.value.username,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((userCredentials.value.username) = $event)),\n                  type: \"text\",\n                  class: \"form-control\"\n                }, null, 8, [\"modelValue\"]),\n                _createVNode(_unref(ErrorMessage), {\n                  name: \"username\",\n                  class: \"error-feedback\"\n                })\n              ]),\n              _createElementVNode(\"div\", _hoisted_5, [\n                _hoisted_6,\n                _createVNode(_unref(Field), {\n                  name: \"password\",\n                  modelValue: userCredentials.value.password,\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((userCredentials.value.password) = $event)),\n                  type: \"password\",\n                  class: \"form-control\"\n                }, null, 8, [\"modelValue\"]),\n                _createVNode(_unref(ErrorMessage), {\n                  name: \"password\",\n                  class: \"error-feedback\"\n                })\n              ]),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createElementVNode(\"button\", {\n                  class: \"btn btn-primary btn-block\",\n                  disabled: loading.value\n                }, [\n                  _withDirectives(_createElementVNode(\"span\", _hoisted_9, null, 512), [\n                    [_vShow, loading.value]\n                  ]),\n                  _hoisted_10\n                ], 8, _hoisted_8)\n              ]),\n              _createElementVNode(\"div\", _hoisted_11, [\n                (errorMessage.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _toDisplayString(errorMessage.value), 1))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _: 1\n          }, 8, [\"validation-schema\"]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n            _hoisted_14,\n            _createElementVNode(\"button\", {\n              onClick: handleLogout,\n              class: \"btn btn-danger\"\n            }, \"Logga ut\"),\n            (loggedOut.value)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_15, \"Du har loggats ut\"))\n              : _createCommentVNode(\"\", true)\n          ]))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n    <div class=\"col-md-12\">\r\n        <div class=\"card card-container\">\r\n            <!-- Visa inloggningsformulär om användaren inte är inloggad -->\r\n            <Form v-if=\"!isLoggedIn\" @submit=\"handleLogin\" :validation-schema=\"schema\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Användarnamn</label>\r\n                    <Field name=\"username\" v-model=\"userCredentials.username\" type=\"text\" class=\"form-control\" />\r\n                    <ErrorMessage name=\"username\" class=\"error-feedback\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Lösenord</label>\r\n                    <Field name=\"password\" v-model=\"userCredentials.password\" type=\"password\" class=\"form-control\" />\r\n                    <ErrorMessage name=\"password\" class=\"error-feedback\" />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\r\n                        <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\r\n                        <span>Logga in</span>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <div v-if=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">\r\n                        {{ errorMessage }}\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n\r\n            <!-- Visa inloggad text och knappar om användaren är inloggad -->\r\n            <div v-else>\r\n                <p>Du är inloggad</p>\r\n                <button @click=\"handleLogout\" class=\"btn btn-danger\">Logga ut</button>\r\n                <!-- Visa bekräftelsemeddelande om användaren har loggats ut -->\r\n                <p v-if=\"loggedOut\" class=\"text-success\">Du har loggats ut</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import { ref, computed, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n    import { Form, Field, ErrorMessage } from 'vee-validate';\r\n    import * as yup from 'yup';\r\n\r\n    const userCredentials = ref({\r\n        username: '',\r\n        password: '',\r\n    });\r\n\r\n    const loading = ref(false);\r\n    const errorMessage = ref('');\r\n    const loggedOut = ref(false);\r\n    const isLoggedIn = ref(false);  // Reaktiv variabel för inloggningsstatus\r\n\r\n    const schema = yup.object().shape({\r\n        username: yup.string().required('Användarnamn krävs'),\r\n        password: yup.string().required('Lösenord krävs'),\r\n    });\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            loading.value = true;\r\n            errorMessage.value = '';\r\n\r\n            const loginResponse = await axios.post('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/auth/login', userCredentials.value);\r\n\r\n            if (loginResponse.status === 200) {\r\n                const token = loginResponse.data.token;\r\n                localStorage.setItem('jwtToken', token);\r\n\r\n                const username = userCredentials.value.username;\r\n                const userIdResponse = await axios.get(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/users/id?username=${username}`);\r\n\r\n                if (userIdResponse.status === 200) {\r\n                    const userId = userIdResponse.data;\r\n                    localStorage.setItem('userId', userId);\r\n                }\r\n\r\n                window.location.reload();\r\n            } else {\r\n                throw new Error('Inloggning misslyckades');\r\n            }\r\n        } catch (error) {\r\n            errorMessage.value = 'Fel vid inloggning. Kontrollera dina inloggningsuppgifter och försök igen.';\r\n        } finally {\r\n            loading.value = false;\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        // Ta bort både JWT-token och userId från localStorage för att logga ut användaren\r\n        localStorage.removeItem('jwtToken');\r\n        localStorage.removeItem('userId');\r\n        loggedOut.value = true;\r\n        userCredentials.value = {\r\n            username: '',\r\n            password: '',\r\n        };\r\n        window.location.reload();\r\n    };\r\n\r\n    // Funktion för att extrahera expiration-time från JWT-token\r\n    const getTokenExpiration = (token: string) => {\r\n        const payloadBase64 = token.split('.')[1];\r\n        const decodedPayload = JSON.parse(atob(payloadBase64));\r\n        return decodedPayload.exp * 1000; // Konvertera till millisekunder\r\n    };\r\n\r\n    // Funktion för att kontrollera och logga ut användaren när token har gått ut\r\n    const handleTokenExpiration = () => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        if (token) {\r\n            const expirationTime = getTokenExpiration(token);\r\n            const currentTime = Date.now();\r\n\r\n            if (currentTime >= expirationTime) {\r\n                handleLogout(); // Token har gått ut, logga ut användaren\r\n            } else {\r\n                const timeUntilExpiration = expirationTime - currentTime;\r\n                setTimeout(handleLogout, timeUntilExpiration); // Logga ut användaren när tiden har gått ut\r\n            }\r\n        }\r\n    };\r\n\r\n    // Funktion för att logga ut användaren efter 30 minuter\r\n    const setAutoLogoutTimer = () => {\r\n        const thirtyMinutes = 1800000; // 30 minuter i millisekunder\r\n        setTimeout(handleLogout, thirtyMinutes); // Logga ut användaren efter 30 minuter\r\n    };\r\n\r\n    // Funktion för att kontrollera inloggningsstatus baserat på om både JWT-token och userId finns i localStorage\r\n    const checkLoginStatus = () => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        const userId = localStorage.getItem('userId');\r\n        isLoggedIn.value = !!token && !!userId; // Sätter isLoggedIn till true om båda finns, annars false\r\n    };\r\n\r\n    // Kontrollera inloggningsstatus när sidan laddas\r\n    onMounted(() => {\r\n        checkLoginStatus(); // Kontrollera om användaren är inloggad\r\n        handleTokenExpiration(); // Kontrollera om JWT-token har gått ut och sätt timer\r\n        setAutoLogoutTimer(); // Sätt en timer för automatisk utloggning efter 30 minuter\r\n    });\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n    .error-feedback {\r\n        color: red;\r\n    }\r\n\r\n    .error-feedback {\r\n        color: red;\r\n    }\r\n\r\n    .card-container {\r\n        max-width: 400px;\r\n        margin: 50px auto;\r\n        padding: 20px;\r\n        border-radius: 8px;\r\n        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n        background-color: #fff;\r\n    }\r\n\r\n    .form-group {\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    label {\r\n        font-weight: bold;\r\n        margin-bottom: 5px;\r\n        display: block;\r\n    }\r\n\r\n    .form-control {\r\n        border: 1px solid #ced4da;\r\n        border-radius: 4px;\r\n        padding: 10px;\r\n        font-size: 14px;\r\n        transition: border-color 0.3s;\r\n    }\r\n\r\n        .form-control:focus {\r\n            border-color: #80bdff;\r\n            outline: none;\r\n            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n        }\r\n\r\n    .btn-block {\r\n        width: 100%;\r\n        padding: 10px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .btn-primary {\r\n        background-color: #007bff;\r\n        border: none;\r\n    }\r\n\r\n        .btn-primary:hover {\r\n            background-color: #0056b3;\r\n        }\r\n\r\n    .btn-danger {\r\n        background-color: #dc3545;\r\n        border: none;\r\n    }\r\n\r\n        .btn-danger:hover {\r\n            background-color: #c82333;\r\n        }\r\n\r\n    .spinner-border {\r\n        margin-right: 8px;\r\n    }\r\n\r\n    .error-feedback {\r\n        color: red;\r\n        font-size: 13px;\r\n    }\r\n\r\n    .alert {\r\n        margin-top: 10px;\r\n    }\r\n\r\n    .text-success {\r\n        color: green;\r\n        font-weight: bold;\r\n    }\r\n\r\n    @media (max-width: 576px) {\r\n        .card-container {\r\n            padding: 15px;\r\n            max-width: 100%;\r\n        }\r\n    }\r\n</style>\r\n","import script from \"./Login.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Login.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=76879689&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-76879689\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-06b1a6de\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"register-user-container\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", { class: \"register-title text-center\" }, \"Registrering\", -1))\nconst _hoisted_3 = { class: \"form-group\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\",\n  class: \"form-label\"\n}, \"Användarnamn\", -1))\nconst _hoisted_5 = { class: \"form-group\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"form-label\"\n}, \"E-post\", -1))\nconst _hoisted_7 = { class: \"form-group\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\",\n  class: \"form-label\"\n}, \"Lösenord\", -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-submit\"\n}, \"Registrera\", -1))\nconst _hoisted_10 = {\n  key: 0,\n  class: \"alert alert-success mt-3\"\n}\nconst _hoisted_11 = {\n  key: 1,\n  class: \"alert alert-danger mt-3\"\n}\n\nimport { ref } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Definiera ett objekt för att lagra information om den nya användaren\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Register',\n  setup(__props) {\n\r\n    const newUser = ref({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    // Skapa en ref för att lagra framgångsmeddelandet\r\n    const successMessage = ref('');\r\n    // Skapa en ref för att lagra felmeddelandet\r\n    const errorMessage = ref('');\r\n\r\n    // Funktion för att skicka formuläret\r\n    const submitForm = async () => {\r\n        try {\r\n            // Skicka POST-förfrågan till API:et för att registrera en ny användare\r\n            await axios.post('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Users', newUser.value);\r\n\r\n            // Visa meddelandet om framgång\r\n            successMessage.value = 'Användaren har registrerats framgångsrikt!';\r\n\r\n            // Rensa formuläret\r\n            newUser.value = {\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n            };\r\n\r\n            // Töm eventuella felmeddelanden\r\n            errorMessage.value = '';\r\n        } catch (error) {\r\n            console.error('Fel vid registrering av användare:', error);\r\n            // Hantera felmeddelanden\r\n            errorMessage.value = 'Ett fel uppstod vid registrering av användare.';\r\n            successMessage.value = '';\r\n        }\r\n    };\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"form\", {\n      class: \"register-form\",\n      onSubmit: _withModifiers(submitForm, [\"prevent\"])\n    }, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _hoisted_4,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((newUser.value.username) = $event)),\n          class: \"form-control\",\n          required: \"\"\n        }, null, 512), [\n          [_vModelText, newUser.value.username]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _hoisted_6,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((newUser.value.email) = $event)),\n          class: \"form-control\",\n          required: \"\"\n        }, null, 512), [\n          [_vModelText, newUser.value.email]\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _hoisted_8,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((newUser.value.password) = $event)),\n          class: \"form-control\",\n          required: \"\"\n        }, null, 512), [\n          [_vModelText, newUser.value.password]\n        ])\n      ]),\n      _hoisted_9\n    ], 32),\n    (successMessage.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString(successMessage.value), 1))\n      : _createCommentVNode(\"\", true),\n    (errorMessage.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString(errorMessage.value), 1))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","﻿\r\n<template>\r\n    <div class=\"register-user-container\">\r\n        <h1 class=\"register-title text-center\">Registrering</h1>\r\n        <form class=\"register-form\" @submit.prevent=\"submitForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\" class=\"form-label\">Användarnamn</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"newUser.username\" class=\"form-control\" required />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"email\" class=\"form-label\">E-post</label>\r\n                <input type=\"email\" id=\"email\" v-model=\"newUser.email\" class=\"form-control\" required />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\" class=\"form-label\">Lösenord</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"newUser.password\" class=\"form-control\" required />\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-submit\">Registrera</button>\r\n        </form>\r\n\r\n        <!-- Visa meddelandet när användaren har registrerats -->\r\n        <div v-if=\"successMessage\" class=\"alert alert-success mt-3\">\r\n            {{ successMessage }}\r\n        </div>\r\n        <!-- Visa felmeddelandet om något gick fel -->\r\n        <div v-if=\"errorMessage\" class=\"alert alert-danger mt-3\">\r\n            {{ errorMessage }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import { ref } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Definiera ett objekt för att lagra information om den nya användaren\r\n    const newUser = ref({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    // Skapa en ref för att lagra framgångsmeddelandet\r\n    const successMessage = ref('');\r\n    // Skapa en ref för att lagra felmeddelandet\r\n    const errorMessage = ref('');\r\n\r\n    // Funktion för att skicka formuläret\r\n    const submitForm = async () => {\r\n        try {\r\n            // Skicka POST-förfrågan till API:et för att registrera en ny användare\r\n            await axios.post('https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Users', newUser.value);\r\n\r\n            // Visa meddelandet om framgång\r\n            successMessage.value = 'Användaren har registrerats framgångsrikt!';\r\n\r\n            // Rensa formuläret\r\n            newUser.value = {\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n            };\r\n\r\n            // Töm eventuella felmeddelanden\r\n            errorMessage.value = '';\r\n        } catch (error) {\r\n            console.error('Fel vid registrering av användare:', error);\r\n            // Hantera felmeddelanden\r\n            errorMessage.value = 'Ett fel uppstod vid registrering av användare.';\r\n            successMessage.value = '';\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .register-user-container {\r\n        max-width: 400px;\r\n        margin: 0 auto;\r\n        padding: 20px;\r\n        background-color: #f9f9f9;\r\n        border-radius: 8px;\r\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .register-title {\r\n        font-family: 'Arial', sans-serif;\r\n        color: #333;\r\n        margin-bottom: 20px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .register-form .form-group {\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    .form-label {\r\n        font-size: 14px;\r\n        color: #555;\r\n        margin-bottom: 5px;\r\n        display: block;\r\n    }\r\n\r\n    .form-input {\r\n        width: 100%;\r\n        padding: 10px;\r\n        border: 1px solid #ccc;\r\n        border-radius: 4px;\r\n        font-size: 16px;\r\n        color: #333;\r\n        transition: border-color 0.2s ease;\r\n    }\r\n\r\n        .form-input:focus {\r\n            border-color: #007bff;\r\n            outline: none;\r\n        }\r\n\r\n    .btn-submit {\r\n        width: 100%;\r\n        padding: 12px;\r\n        background-color: #007bff;\r\n        color: #fff;\r\n        border: none;\r\n        border-radius: 4px;\r\n        font-size: 16px;\r\n        cursor: pointer;\r\n        transition: background-color 0.2s ease;\r\n    }\r\n\r\n        .btn-submit:hover {\r\n            background-color: #0056b3;\r\n        }\r\n\r\n    .alert {\r\n        margin-top: 20px;\r\n        padding: 15px;\r\n        border-radius: 5px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .alert-success {\r\n        background-color: #d4edda;\r\n        color: #155724;\r\n    }\r\n\r\n    .alert-danger {\r\n        background-color: #f8d7da;\r\n        color: #721c24;\r\n    }\r\n</style>\r\n","import script from \"./Register.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Register.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./Register.vue?vue&type=style&index=0&id=06b1a6de&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-06b1a6de\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-3d9f8d2c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container mt-3\" }\nconst _hoisted_2 = { class: \"mb-3\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\",\n  class: \"form-label\"\n}, \"Användarnamn\", -1))\nconst _hoisted_4 = {\n  key: 0,\n  class: \"text-danger\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"text-success\"\n}\n\nimport { ref } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DeleteUser',\n  setup(__props) {\n\r\n    const username = ref('');\r\n    const errorMessage = ref('');\r\n    const successMessage = ref('');\r\n\r\n    // Här kan du sätta din JWT-token (hämtad från autentisering eller lagrad i localStorage)\r\n    const token = localStorage.getItem('jwtToken') || ''; // Hämta JWT-token från localStorage\r\n\r\n    const deleteUser = async () => {\r\n        if (!username.value) {\r\n            errorMessage.value = 'Användarnamn kan inte vara tomt';\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.delete(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Users/by-username/${username.value}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}` // Skicka JWT-token i Authorization-headern\r\n                }\r\n            });\r\n\r\n            if (response.status === 204) { // No Content\r\n                successMessage.value = `Användare ${username.value} raderad.`;\r\n                username.value = ''; // Återställ inputfältet\r\n                errorMessage.value = '';\r\n            } else if (response.status === 404) {\r\n                errorMessage.value = 'Användaren kunde inte hittas.';\r\n                successMessage.value = '';\r\n            } else if (response.status === 401) {\r\n                errorMessage.value = 'Obehörig. Du måste vara inloggad för att radera användaren.';\r\n                successMessage.value = '';\r\n            } else {\r\n                errorMessage.value = 'Ett fel inträffade. Försök igen.';\r\n                successMessage.value = '';\r\n            }\r\n        } catch (error) {\r\n            errorMessage.value = 'Kunde inte ansluta till servern.';\r\n            successMessage.value = '';\r\n        }\r\n    };\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _hoisted_3,\n      _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((username).value = $event)),\n        class: \"form-control\",\n        placeholder: \"Skriv användarnamn\"\n      }, null, 512), [\n        [_vModelText, username.value]\n      ])\n    ]),\n    _createElementVNode(\"button\", {\n      class: \"btn btn-danger\",\n      onClick: deleteUser\n    }, \"Radera användare\"),\n    (errorMessage.value)\n      ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString(errorMessage.value), 1))\n      : _createCommentVNode(\"\", true),\n    (successMessage.value)\n      ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(successMessage.value), 1))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n    <div class=\"container mt-3\">\r\n        <div class=\"mb-3\">\r\n            <label for=\"username\" class=\"form-label\">Användarnamn</label>\r\n            <input type=\"text\" id=\"username\" v-model=\"username\" class=\"form-control\" placeholder=\"Skriv användarnamn\">\r\n        </div>\r\n        <button class=\"btn btn-danger\" @click=\"deleteUser\">Radera användare</button>\r\n        <p v-if=\"errorMessage\" class=\"text-danger\">{{ errorMessage }}</p>\r\n        <p v-if=\"successMessage\" class=\"text-success\">{{ successMessage }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { ref } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    const username = ref('');\r\n    const errorMessage = ref('');\r\n    const successMessage = ref('');\r\n\r\n    // Här kan du sätta din JWT-token (hämtad från autentisering eller lagrad i localStorage)\r\n    const token = localStorage.getItem('jwtToken') || ''; // Hämta JWT-token från localStorage\r\n\r\n    const deleteUser = async () => {\r\n        if (!username.value) {\r\n            errorMessage.value = 'Användarnamn kan inte vara tomt';\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.delete(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Users/by-username/${username.value}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}` // Skicka JWT-token i Authorization-headern\r\n                }\r\n            });\r\n\r\n            if (response.status === 204) { // No Content\r\n                successMessage.value = `Användare ${username.value} raderad.`;\r\n                username.value = ''; // Återställ inputfältet\r\n                errorMessage.value = '';\r\n            } else if (response.status === 404) {\r\n                errorMessage.value = 'Användaren kunde inte hittas.';\r\n                successMessage.value = '';\r\n            } else if (response.status === 401) {\r\n                errorMessage.value = 'Obehörig. Du måste vara inloggad för att radera användaren.';\r\n                successMessage.value = '';\r\n            } else {\r\n                errorMessage.value = 'Ett fel inträffade. Försök igen.';\r\n                successMessage.value = '';\r\n            }\r\n        } catch (error) {\r\n            errorMessage.value = 'Kunde inte ansluta till servern.';\r\n            successMessage.value = '';\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .container {\r\n        max-width: 400px;\r\n    }\r\n</style>\r\n","import script from \"./DeleteUser.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DeleteUser.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./DeleteUser.vue?vue&type=style&index=0&id=3d9f8d2c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3d9f8d2c\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-d6df87bc\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"profile\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Profil\", -1))\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Användarnamn:\", -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Email:\", -1))\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Skapades:\", -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Uppdaterades senast:\", -1))\nconst _hoisted_8 = { key: 1 }\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Hämtar profile data...\", -1))\nconst _hoisted_10 = [\n  _hoisted_9\n]\n\nimport { ref, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Define state variables\r\n    \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ProfileView',\n  setup(__props) {\n\r\n    const user = ref(null);\r\n    const errorMessage = ref('');\r\n    const token = localStorage.getItem('jwtToken');\r\n    const userId = localStorage.getItem('userId');\r\n    const formatDate = (dateString: string) => dateString.split('T')[0];\r\n    // Fetch user profile when the component is mounted\r\n    const fetchUserProfile = async () => {\r\n        try {\r\n            const response = await axios.get(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Users/${userId}`, {\n                headers: {\n                    Authorization: `Bearer ${token}` // Lägg till JWT-token i Authorization-headern\n                }\n            });\r\n\r\n            user.value = response.data;\r\n        } catch (error) {\r\n            errorMessage.value = 'Error fetching profile data';\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // Call the fetchUserProfile on component mount\r\n    onMounted(() => {\r\n        fetchUserProfile();\r\n    });\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (user.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"p\", null, [\n            _hoisted_4,\n            _createTextVNode(\" \" + _toDisplayString(user.value.username), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _hoisted_5,\n            _createTextVNode(\" \" + _toDisplayString(user.value.email), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _hoisted_6,\n            _createTextVNode(\" \" + _toDisplayString(formatDate(user.value.createdAt)), 1)\n          ]),\n          _createElementVNode(\"p\", null, [\n            _hoisted_7,\n            _createTextVNode(\" \" + _toDisplayString(formatDate(user.value.updatedAt)), 1)\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _hoisted_10))\n  ]))\n}\n}\n\n})","<template>\r\n    <div class=\"profile\">\r\n        <h1>Profil</h1>\r\n        <div v-if=\"user\">\r\n            <p><strong>Användarnamn:</strong> {{ user.username }}</p>\r\n            <p><strong>Email:</strong> {{ user.email }}</p>\r\n            <p><strong>Skapades:</strong> {{ formatDate(user.createdAt) }}</p>\r\n            <p><strong>Uppdaterades senast:</strong> {{ formatDate(user.updatedAt) }}</p>\r\n        </div>\r\n        <div v-else>\r\n            <p>Hämtar profile data...</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { ref, onMounted } from 'vue';\r\n    import axios from 'axios';\r\n\r\n    // Define state variables\r\n    const user = ref(null);\r\n    const errorMessage = ref('');\r\n    const token = localStorage.getItem('jwtToken');\r\n    const userId = localStorage.getItem('userId');\r\n    const formatDate = (dateString: string) => dateString.split('T')[0];\r\n    // Fetch user profile when the component is mounted\r\n    const fetchUserProfile = async () => {\r\n        try {\r\n            const response = await axios.get(`https://grupp4forumdevapp20240923094105.azurewebsites.net/api/Users/${userId}`, {\n                headers: {\n                    Authorization: `Bearer ${token}` // Lägg till JWT-token i Authorization-headern\n                }\n            });\r\n\r\n            user.value = response.data;\r\n        } catch (error) {\r\n            errorMessage.value = 'Error fetching profile data';\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // Call the fetchUserProfile on component mount\r\n    onMounted(() => {\r\n        fetchUserProfile();\r\n    });\r\n</script>\r\n\r\n<style scoped>\r\n    .profile {\r\n        margin: 20px;\r\n    }\r\n</style>\r\n","import script from \"./ProfileView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ProfileView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ProfileView.vue?vue&type=style&index=0&id=d6df87bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d6df87bc\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport ForumView from '../views/ForumView.vue'\nimport Login from '../components/Login.vue';\nimport Register from '../components/Register.vue';\nimport DeleteUser from '../components/DeleteUser.vue'\nimport ProfileView from '../views/ProfileView.vue'\n\nconst routes = [\n    {\n        path: '/',\n        name: 'home',\n        component: HomeView\n    },\n\n    {\n        path: '/forum',\n        name: 'forum',\n        component: ForumView\n    },\n    {\n        path: '/login',\n        name: 'login',\n        component: Login\n    },\n     {\n        path: '/register',\n        name: 'register',\n        component: Register\n    },\n    {\n        path: '/admin',\n        name: 'admin',\n        component: DeleteUser\n    },\n        {\n        path: '/profile',\n        name: 'profile',\n        component: ProfileView\n    }\n]\n\nconst router = createRouter({\n    history: createWebHashHistory(),\n    routes\n})\n\nexport default router","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\nimport '../src/assets/site.css'\r\n\r\ncreateApp(App).use(router).mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgrupp4forum\"] = self[\"webpackChunkgrupp4forum\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(1223); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","id","_hoisted_2","_createElementVNode","src","_imports_0","alt","class","_hoisted_3","_imports_1","_hoisted_4","_imports_2","_hoisted_5","_imports_3","_defineComponent","__name","setup","__props","isAdminOrModerator","ref","isLoggedIn","checkLoginStatus","token","localStorage","getItem","value","onMounted","async","console","error","response","axios","get","headers","data","_ctx","_cache","_component_router_link","_resolveComponent","_component_router_view","_openBlock","_createElementBlock","_createVNode","to","default","_withCtx","_createTextVNode","_","_createCommentVNode","_createBlock","key","__exports__","_Fragment","script","render","_withScopeId","n","_pushScopeId","_popScopeId","style","props","isVisible","type","Boolean","required","postId","Number","emits","emit","__emit","confirmDelete","delete","closeModal","onClick","_hoisted_6","_hoisted_7","for","_hoisted_8","_hoisted_9","_hoisted_10","parentReplyId","content","replyImage","onFileChange","event","target","files","length","submitForm","Error","formData","FormData","append","url","post","Authorization","status","onSubmit","_withModifiers","_withDirectives","$event","_vModelText","onChange","accept","_hoisted_11","_hoisted_12","_hoisted_13","Object","title","selectedCategory","categoryId","categories","fetchCategories","String","put","watch","newPost","Title","Content","_renderList","category","_toDisplayString","name","_vModelSelect","reply","replyId","newReply","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","postsPerPage","posts","allPosts","currentPage","totalPages","computed","Math","ceil","paginatedPosts","start","end","slice","formatDate","dateString","split","isConfirmDeleteModalVisible","isConfirmDeleteReplyModalVisible","isCreateReplyModalVisible","selectedPostIdToDelete","selectedReplyIdToDelete","selectedPostId","selectedParentReplyId","isEditPostModalVisible","selectedPost","isEditReplyModalVisible","selectedReply","openEditPostModal","closeEditPostModal","openCreateReplyModal","closeCreateReplyModal","openEditReplyModal","closeEditReplyModal","showConfirmDeleteModal","closeConfirmDeleteModal","showConfirmDeleteReplyModal","prevPage","nextPage","fetchPosts","postsWithReplies","Promise","all","map","replies","fetchRepliesForPost","find","cat","userHasLiked","HasUserLikedPost","canEdit","checkEditPermissions","categoryName","imageBase64","repliesWithAdditionalInfo","HasUserLikedReply","checkEditPermissionsForReply","info","sortPosts","sortBy","sort","a","b","likes","Date","createdAt","getTime","likePost","message","p","likeReply","r","unlikePost","warn","unlikeReply","sortPostsByCategory","filter","resetPosts","href","author","updatedAt","_normalizeClass","disabled","EditPostModal","onClose","onPostUpdated","CreateReplyModal","EditReplyModal","onReplyUpdated","ConfirmDeletePostModal","onConfirm","onCancel","image","handleImageUpload","file","isCreatePostModalVisible","openCreatePostModal","closeCreatePostModal","CreatePostModal","onPostCreated","PostList","role","userCredentials","username","password","loading","errorMessage","loggedOut","schema","yup","shape","handleLogin","loginResponse","setItem","userIdResponse","userId","window","location","reload","handleLogout","removeItem","getTokenExpiration","payloadBase64","decodedPayload","JSON","parse","atob","exp","handleTokenExpiration","expirationTime","currentTime","now","timeUntilExpiration","setTimeout","setAutoLogoutTimer","thirtyMinutes","_unref","Form","Field","modelValue","ErrorMessage","_vShow","newUser","email","successMessage","deleteUser","placeholder","user","fetchUserProfile","routes","path","component","HomeView","ForumView","Login","Register","DeleteUser","ProfileView","router","createRouter","history","createWebHashHistory","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}